Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    BTAND
    BTNOT
    BTOR
    COMMENT
    DOT
    FUR
    MODULO
    NOT
    QUOTE
    STR
    SWENN
    WRD
    newline

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAMM V R B SCHLUSS
Rule 2     V -> V0 V
Rule 3     V -> <empty>
Rule 4     V0 -> DIM ID V1
Rule 5     V0 -> DIM ID V2
Rule 6     V1 -> COMMA ID V1
Rule 7     V1 -> COMMA ID V2
Rule 8     V2 -> ALS TYPE AMC0
Rule 9     R -> R0 COLON B RUKKHER R
Rule 10    R -> <empty>
Rule 11    R0 -> SUB ID
Rule 12    B -> BEGIN S
Rule 13    S -> S0 S
Rule 14    S -> <empty>
Rule 15    S0 -> IDORAMC ASSIGN E
Rule 16    S0 -> EIN LPAREN IDORAMC INPUT RPAREN
Rule 17    S0 -> AUS LPAREN EXP OUTPUT RPAREN
Rule 18    S0 -> GSUB ID
Rule 19    S0 -> W SD END
Rule 20    S0 -> WAHREND CONDITION S ENDE
Rule 21    S0 -> TUN S WAHREND CONDITION
Rule 22    S0 -> <empty>
Rule 23    E -> T
Rule 24    E -> E PLUS T
Rule 25    E -> E MINUS T
Rule 26    T -> F
Rule 27    T -> T TIMES F
Rule 28    T -> T DIVIDE F
Rule 29    T -> <empty>
Rule 30    F -> ID
Rule 31    F -> VALUE
Rule 32    F -> FLT
Rule 33    F -> LPAREN E RPAREN
Rule 34    F -> <empty>
Rule 35    EXP -> <empty>
Rule 36    IDORAMC -> ID
Rule 37    IDORAMC -> ID AMC1
Rule 38    EIDORAMC -> ID
Rule 39    EIDORAMC -> ID AMC1
Rule 40    CONDITION -> LPAREN CMP GT CMP RPAREN
Rule 41    CONDITION -> LPAREN CMP GE CMP RPAREN
Rule 42    CONDITION -> LPAREN CMP EQ CMP RPAREN
Rule 43    CONDITION -> LPAREN CMP NE CMP RPAREN
Rule 44    CONDITION -> LPAREN CMP LE CMP RPAREN
Rule 45    CONDITION -> LPAREN CMP LT CMP RPAREN
Rule 46    CONDITION -> CONDITION AND CONDITION
Rule 47    CONDITION -> CONDITION OR CONDITION
Rule 48    CMP -> VALUE
Rule 49    CMP -> ID
Rule 50    CMP -> FLT
Rule 51    W -> W0 W1
Rule 52    W0 -> WENN CONDITION
Rule 53    W1 -> DANN S
Rule 54    SD -> SD0 W1
Rule 55    SD -> <empty>
Rule 56    SD0 -> SONNST
Rule 57    END -> ENDE
Rule 58    INPUT -> COMMA IDORAMC INPUT
Rule 59    INPUT -> <empty>
Rule 60    OUTPUT -> COMMA EXP OUTPUT
Rule 61    OUTPUT -> <empty>
Rule 62    TYPE -> WORD
Rule 63    TYPE -> FLOAT
Rule 64    TYPE -> STRING
Rule 65    AMC0 -> AMC1
Rule 66    AMC0 -> <empty>
Rule 67    AMC1 -> LBRKT VALUE RBRKT AMC2
Rule 68    AMC1 -> LBRKT ID RBRKT AMC2
Rule 69    AMC1 -> LBRKT VALUE RBRKT
Rule 70    AMC1 -> LBRKT ID RBRKT
Rule 71    AMC1 -> <empty>
Rule 72    AMC2 -> LBRKT VALUE RBRKT AMC3
Rule 73    AMC2 -> LBRKT ID RBRKT AMC3
Rule 74    AMC2 -> LBRKT VALUE RBRKT
Rule 75    AMC2 -> LBRKT ID RBRKT
Rule 76    AMC2 -> <empty>
Rule 77    AMC3 -> LBRKT VALUE RBRKT
Rule 78    AMC3 -> LBRKT ID RBRKT
Rule 79    AMC3 -> <empty>

Terminals, with rules where they appear

ALS                  : 8
AND                  : 46
ASSIGN               : 15
AUS                  : 17
BEGIN                : 12
BREAK                : 
BTAND                : 
BTNOT                : 
BTOR                 : 
COLON                : 9
COMMA                : 6 7 58 60
COMMENT              : 
DANN                 : 53
DIM                  : 4 5
DIVIDE               : 28
DOT                  : 
EIN                  : 16
ENDE                 : 20 57
EQ                   : 42
FLOAT                : 63
FLT                  : 32 50
FUR                  : 
GE                   : 41
GSUB                 : 18
GT                   : 40
ID                   : 4 5 6 7 11 18 30 36 37 38 39 49 68 70 73 75 78
LBRKT                : 67 68 69 70 72 73 74 75 77 78
LE                   : 44
LPAREN               : 16 17 33 40 41 42 43 44 45
LT                   : 45
MINUS                : 25
MODULO               : 
NE                   : 43
NOT                  : 
OR                   : 47
PLUS                 : 24
PROGRAMM             : 1
QUOTE                : 
RBRKT                : 67 68 69 70 72 73 74 75 77 78
RPAREN               : 16 17 33 40 41 42 43 44 45
RUKKHER              : 9
SCHLUSS              : 1
SONNST               : 56
STR                  : 
STRING               : 64
SUB                  : 11
SWENN                : 
TIMES                : 27
TUN                  : 21
VALUE                : 31 48 67 69 72 74 77
WAHREND              : 20 21
WENN                 : 52
WORD                 : 62
WRD                  : 
error                : 
newline              : 

Nonterminals, with rules where they appear

AMC0                 : 8
AMC1                 : 37 39 65
AMC2                 : 67 68
AMC3                 : 72 73
B                    : 1 9
CMP                  : 40 40 41 41 42 42 43 43 44 44 45 45
CONDITION            : 20 21 46 46 47 47 52
E                    : 15 24 25 33
EIDORAMC             : 
END                  : 19
EXP                  : 17 60
F                    : 26 27 28
IDORAMC              : 15 16 58
INPUT                : 16 58
OUTPUT               : 17 60
R                    : 1 9
R0                   : 9
S                    : 12 13 20 21 53
S0                   : 13
SD                   : 19
SD0                  : 54
T                    : 23 24 25 27 28
TYPE                 : 8
V                    : 1 2
V0                   : 2
V1                   : 4 6
V2                   : 5 7
W                    : 19
W0                   : 51
W1                   : 51 54
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAMM V R B SCHLUSS

    PROGRAMM        shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAMM . V R B SCHLUSS
    (2) V -> . V0 V
    (3) V -> .
    (4) V0 -> . DIM ID V1
    (5) V0 -> . DIM ID V2

    SUB             reduce using rule 3 (V -> .)
    BEGIN           reduce using rule 3 (V -> .)
    DIM             shift and go to state 5

    V                              shift and go to state 3
    V0                             shift and go to state 4

state 3

    (1) program -> PROGRAMM V . R B SCHLUSS
    (9) R -> . R0 COLON B RUKKHER R
    (10) R -> .
    (11) R0 -> . SUB ID

    BEGIN           reduce using rule 10 (R -> .)
    SUB             shift and go to state 8

    R                              shift and go to state 6
    R0                             shift and go to state 7

state 4

    (2) V -> V0 . V
    (2) V -> . V0 V
    (3) V -> .
    (4) V0 -> . DIM ID V1
    (5) V0 -> . DIM ID V2

    SUB             reduce using rule 3 (V -> .)
    BEGIN           reduce using rule 3 (V -> .)
    DIM             shift and go to state 5

    V0                             shift and go to state 4
    V                              shift and go to state 9

state 5

    (4) V0 -> DIM . ID V1
    (5) V0 -> DIM . ID V2

    ID              shift and go to state 10


state 6

    (1) program -> PROGRAMM V R . B SCHLUSS
    (12) B -> . BEGIN S

    BEGIN           shift and go to state 12

    B                              shift and go to state 11

state 7

    (9) R -> R0 . COLON B RUKKHER R

    COLON           shift and go to state 13


state 8

    (11) R0 -> SUB . ID

    ID              shift and go to state 14


state 9

    (2) V -> V0 V .

    SUB             reduce using rule 2 (V -> V0 V .)
    BEGIN           reduce using rule 2 (V -> V0 V .)


state 10

    (4) V0 -> DIM ID . V1
    (5) V0 -> DIM ID . V2
    (6) V1 -> . COMMA ID V1
    (7) V1 -> . COMMA ID V2
    (8) V2 -> . ALS TYPE AMC0

    COMMA           shift and go to state 17
    ALS             shift and go to state 18

    V1                             shift and go to state 15
    V2                             shift and go to state 16

state 11

    (1) program -> PROGRAMM V R B . SCHLUSS

    SCHLUSS         shift and go to state 19


state 12

    (12) B -> BEGIN . S
    (13) S -> . S0 S
    (14) S -> .
    (15) S0 -> . IDORAMC ASSIGN E
    (16) S0 -> . EIN LPAREN IDORAMC INPUT RPAREN
    (17) S0 -> . AUS LPAREN EXP OUTPUT RPAREN
    (18) S0 -> . GSUB ID
    (19) S0 -> . W SD END
    (20) S0 -> . WAHREND CONDITION S ENDE
    (21) S0 -> . TUN S WAHREND CONDITION
    (22) S0 -> .
    (36) IDORAMC -> . ID
    (37) IDORAMC -> . ID AMC1
    (51) W -> . W0 W1
    (52) W0 -> . WENN CONDITION

  ! shift/reduce conflict for EIN resolved as shift
  ! shift/reduce conflict for AUS resolved as shift
  ! shift/reduce conflict for GSUB resolved as shift
  ! shift/reduce conflict for WAHREND resolved as shift
  ! shift/reduce conflict for TUN resolved as shift
  ! reduce/reduce conflict for SCHLUSS resolved using rule 14 (S -> .)
  ! reduce/reduce conflict for RUKKHER resolved using rule 14 (S -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WENN resolved as shift
    SCHLUSS         reduce using rule 14 (S -> .)
    RUKKHER         reduce using rule 14 (S -> .)
    EIN             shift and go to state 23
    AUS             shift and go to state 24
    GSUB            shift and go to state 25
    WAHREND         shift and go to state 28
    TUN             shift and go to state 29
    ID              shift and go to state 26
    WENN            shift and go to state 31

  ! EIN             [ reduce using rule 22 (S0 -> .) ]
  ! AUS             [ reduce using rule 22 (S0 -> .) ]
  ! GSUB            [ reduce using rule 22 (S0 -> .) ]
  ! WAHREND         [ reduce using rule 22 (S0 -> .) ]
  ! TUN             [ reduce using rule 22 (S0 -> .) ]
  ! ID              [ reduce using rule 22 (S0 -> .) ]
  ! WENN            [ reduce using rule 22 (S0 -> .) ]
  ! SCHLUSS         [ reduce using rule 22 (S0 -> .) ]
  ! RUKKHER         [ reduce using rule 22 (S0 -> .) ]

    S                              shift and go to state 20
    S0                             shift and go to state 21
    IDORAMC                        shift and go to state 22
    W                              shift and go to state 27
    W0                             shift and go to state 30

state 13

    (9) R -> R0 COLON . B RUKKHER R
    (12) B -> . BEGIN S

    BEGIN           shift and go to state 12

    B                              shift and go to state 32

state 14

    (11) R0 -> SUB ID .

    COLON           reduce using rule 11 (R0 -> SUB ID .)


state 15

    (4) V0 -> DIM ID V1 .

    DIM             reduce using rule 4 (V0 -> DIM ID V1 .)
    SUB             reduce using rule 4 (V0 -> DIM ID V1 .)
    BEGIN           reduce using rule 4 (V0 -> DIM ID V1 .)


state 16

    (5) V0 -> DIM ID V2 .

    DIM             reduce using rule 5 (V0 -> DIM ID V2 .)
    SUB             reduce using rule 5 (V0 -> DIM ID V2 .)
    BEGIN           reduce using rule 5 (V0 -> DIM ID V2 .)


state 17

    (6) V1 -> COMMA . ID V1
    (7) V1 -> COMMA . ID V2

    ID              shift and go to state 33


state 18

    (8) V2 -> ALS . TYPE AMC0
    (62) TYPE -> . WORD
    (63) TYPE -> . FLOAT
    (64) TYPE -> . STRING

    WORD            shift and go to state 35
    FLOAT           shift and go to state 36
    STRING          shift and go to state 37

    TYPE                           shift and go to state 34

state 19

    (1) program -> PROGRAMM V R B SCHLUSS .

    $end            reduce using rule 1 (program -> PROGRAMM V R B SCHLUSS .)


state 20

    (12) B -> BEGIN S .

    SCHLUSS         reduce using rule 12 (B -> BEGIN S .)
    RUKKHER         reduce using rule 12 (B -> BEGIN S .)


state 21

    (13) S -> S0 . S
    (13) S -> . S0 S
    (14) S -> .
    (15) S0 -> . IDORAMC ASSIGN E
    (16) S0 -> . EIN LPAREN IDORAMC INPUT RPAREN
    (17) S0 -> . AUS LPAREN EXP OUTPUT RPAREN
    (18) S0 -> . GSUB ID
    (19) S0 -> . W SD END
    (20) S0 -> . WAHREND CONDITION S ENDE
    (21) S0 -> . TUN S WAHREND CONDITION
    (22) S0 -> .
    (36) IDORAMC -> . ID
    (37) IDORAMC -> . ID AMC1
    (51) W -> . W0 W1
    (52) W0 -> . WENN CONDITION

  ! shift/reduce conflict for WAHREND resolved as shift
  ! shift/reduce conflict for EIN resolved as shift
  ! shift/reduce conflict for AUS resolved as shift
  ! shift/reduce conflict for GSUB resolved as shift
  ! shift/reduce conflict for WAHREND resolved as shift
  ! shift/reduce conflict for TUN resolved as shift
  ! reduce/reduce conflict for SCHLUSS resolved using rule 14 (S -> .)
  ! reduce/reduce conflict for RUKKHER resolved using rule 14 (S -> .)
  ! reduce/reduce conflict for ENDE resolved using rule 14 (S -> .)
  ! reduce/reduce conflict for SONNST resolved using rule 14 (S -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WENN resolved as shift
    SCHLUSS         reduce using rule 14 (S -> .)
    RUKKHER         reduce using rule 14 (S -> .)
    ENDE            reduce using rule 14 (S -> .)
    SONNST          reduce using rule 14 (S -> .)
    EIN             shift and go to state 23
    AUS             shift and go to state 24
    GSUB            shift and go to state 25
    WAHREND         shift and go to state 28
    TUN             shift and go to state 29
    ID              shift and go to state 26
    WENN            shift and go to state 31

  ! WAHREND         [ reduce using rule 14 (S -> .) ]
  ! EIN             [ reduce using rule 22 (S0 -> .) ]
  ! AUS             [ reduce using rule 22 (S0 -> .) ]
  ! GSUB            [ reduce using rule 22 (S0 -> .) ]
  ! WAHREND         [ reduce using rule 22 (S0 -> .) ]
  ! TUN             [ reduce using rule 22 (S0 -> .) ]
  ! ID              [ reduce using rule 22 (S0 -> .) ]
  ! WENN            [ reduce using rule 22 (S0 -> .) ]
  ! SCHLUSS         [ reduce using rule 22 (S0 -> .) ]
  ! RUKKHER         [ reduce using rule 22 (S0 -> .) ]
  ! ENDE            [ reduce using rule 22 (S0 -> .) ]
  ! SONNST          [ reduce using rule 22 (S0 -> .) ]

    S0                             shift and go to state 21
    S                              shift and go to state 38
    IDORAMC                        shift and go to state 22
    W                              shift and go to state 27
    W0                             shift and go to state 30

state 22

    (15) S0 -> IDORAMC . ASSIGN E

    ASSIGN          shift and go to state 39


state 23

    (16) S0 -> EIN . LPAREN IDORAMC INPUT RPAREN

    LPAREN          shift and go to state 40


state 24

    (17) S0 -> AUS . LPAREN EXP OUTPUT RPAREN

    LPAREN          shift and go to state 41


state 25

    (18) S0 -> GSUB . ID

    ID              shift and go to state 42


state 26

    (36) IDORAMC -> ID .
    (37) IDORAMC -> ID . AMC1
    (67) AMC1 -> . LBRKT VALUE RBRKT AMC2
    (68) AMC1 -> . LBRKT ID RBRKT AMC2
    (69) AMC1 -> . LBRKT VALUE RBRKT
    (70) AMC1 -> . LBRKT ID RBRKT
    (71) AMC1 -> .

  ! reduce/reduce conflict for ASSIGN resolved using rule 36 (IDORAMC -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 36 (IDORAMC -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 36 (IDORAMC -> ID .)
    ASSIGN          reduce using rule 36 (IDORAMC -> ID .)
    COMMA           reduce using rule 36 (IDORAMC -> ID .)
    RPAREN          reduce using rule 36 (IDORAMC -> ID .)
    LBRKT           shift and go to state 44

  ! ASSIGN          [ reduce using rule 71 (AMC1 -> .) ]
  ! COMMA           [ reduce using rule 71 (AMC1 -> .) ]
  ! RPAREN          [ reduce using rule 71 (AMC1 -> .) ]

    AMC1                           shift and go to state 43

state 27

    (19) S0 -> W . SD END
    (54) SD -> . SD0 W1
    (55) SD -> .
    (56) SD0 -> . SONNST

    ENDE            reduce using rule 55 (SD -> .)
    SONNST          shift and go to state 47

    SD                             shift and go to state 45
    SD0                            shift and go to state 46

state 28

    (20) S0 -> WAHREND . CONDITION S ENDE
    (40) CONDITION -> . LPAREN CMP GT CMP RPAREN
    (41) CONDITION -> . LPAREN CMP GE CMP RPAREN
    (42) CONDITION -> . LPAREN CMP EQ CMP RPAREN
    (43) CONDITION -> . LPAREN CMP NE CMP RPAREN
    (44) CONDITION -> . LPAREN CMP LE CMP RPAREN
    (45) CONDITION -> . LPAREN CMP LT CMP RPAREN
    (46) CONDITION -> . CONDITION AND CONDITION
    (47) CONDITION -> . CONDITION OR CONDITION

    LPAREN          shift and go to state 49

    CONDITION                      shift and go to state 48

state 29

    (21) S0 -> TUN . S WAHREND CONDITION
    (13) S -> . S0 S
    (14) S -> .
    (15) S0 -> . IDORAMC ASSIGN E
    (16) S0 -> . EIN LPAREN IDORAMC INPUT RPAREN
    (17) S0 -> . AUS LPAREN EXP OUTPUT RPAREN
    (18) S0 -> . GSUB ID
    (19) S0 -> . W SD END
    (20) S0 -> . WAHREND CONDITION S ENDE
    (21) S0 -> . TUN S WAHREND CONDITION
    (22) S0 -> .
    (36) IDORAMC -> . ID
    (37) IDORAMC -> . ID AMC1
    (51) W -> . W0 W1
    (52) W0 -> . WENN CONDITION

  ! shift/reduce conflict for WAHREND resolved as shift
  ! shift/reduce conflict for EIN resolved as shift
  ! shift/reduce conflict for AUS resolved as shift
  ! shift/reduce conflict for GSUB resolved as shift
  ! shift/reduce conflict for WAHREND resolved as shift
  ! shift/reduce conflict for TUN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WENN resolved as shift
    EIN             shift and go to state 23
    AUS             shift and go to state 24
    GSUB            shift and go to state 25
    WAHREND         shift and go to state 28
    TUN             shift and go to state 29
    ID              shift and go to state 26
    WENN            shift and go to state 31

  ! WAHREND         [ reduce using rule 14 (S -> .) ]
  ! EIN             [ reduce using rule 22 (S0 -> .) ]
  ! AUS             [ reduce using rule 22 (S0 -> .) ]
  ! GSUB            [ reduce using rule 22 (S0 -> .) ]
  ! WAHREND         [ reduce using rule 22 (S0 -> .) ]
  ! TUN             [ reduce using rule 22 (S0 -> .) ]
  ! ID              [ reduce using rule 22 (S0 -> .) ]
  ! WENN            [ reduce using rule 22 (S0 -> .) ]

    S                              shift and go to state 50
    S0                             shift and go to state 21
    IDORAMC                        shift and go to state 22
    W                              shift and go to state 27
    W0                             shift and go to state 30

state 30

    (51) W -> W0 . W1
    (53) W1 -> . DANN S

    DANN            shift and go to state 52

    W1                             shift and go to state 51

state 31

    (52) W0 -> WENN . CONDITION
    (40) CONDITION -> . LPAREN CMP GT CMP RPAREN
    (41) CONDITION -> . LPAREN CMP GE CMP RPAREN
    (42) CONDITION -> . LPAREN CMP EQ CMP RPAREN
    (43) CONDITION -> . LPAREN CMP NE CMP RPAREN
    (44) CONDITION -> . LPAREN CMP LE CMP RPAREN
    (45) CONDITION -> . LPAREN CMP LT CMP RPAREN
    (46) CONDITION -> . CONDITION AND CONDITION
    (47) CONDITION -> . CONDITION OR CONDITION

    LPAREN          shift and go to state 49

    CONDITION                      shift and go to state 53

state 32

    (9) R -> R0 COLON B . RUKKHER R

    RUKKHER         shift and go to state 54


state 33

    (6) V1 -> COMMA ID . V1
    (7) V1 -> COMMA ID . V2
    (6) V1 -> . COMMA ID V1
    (7) V1 -> . COMMA ID V2
    (8) V2 -> . ALS TYPE AMC0

    COMMA           shift and go to state 17
    ALS             shift and go to state 18

    V1                             shift and go to state 55
    V2                             shift and go to state 56

state 34

    (8) V2 -> ALS TYPE . AMC0
    (65) AMC0 -> . AMC1
    (66) AMC0 -> .
    (67) AMC1 -> . LBRKT VALUE RBRKT AMC2
    (68) AMC1 -> . LBRKT ID RBRKT AMC2
    (69) AMC1 -> . LBRKT VALUE RBRKT
    (70) AMC1 -> . LBRKT ID RBRKT
    (71) AMC1 -> .

  ! reduce/reduce conflict for DIM resolved using rule 66 (AMC0 -> .)
  ! reduce/reduce conflict for SUB resolved using rule 66 (AMC0 -> .)
  ! reduce/reduce conflict for BEGIN resolved using rule 66 (AMC0 -> .)
    DIM             reduce using rule 66 (AMC0 -> .)
    SUB             reduce using rule 66 (AMC0 -> .)
    BEGIN           reduce using rule 66 (AMC0 -> .)
    LBRKT           shift and go to state 44

  ! DIM             [ reduce using rule 71 (AMC1 -> .) ]
  ! SUB             [ reduce using rule 71 (AMC1 -> .) ]
  ! BEGIN           [ reduce using rule 71 (AMC1 -> .) ]

    AMC0                           shift and go to state 57
    AMC1                           shift and go to state 58

state 35

    (62) TYPE -> WORD .

    LBRKT           reduce using rule 62 (TYPE -> WORD .)
    DIM             reduce using rule 62 (TYPE -> WORD .)
    SUB             reduce using rule 62 (TYPE -> WORD .)
    BEGIN           reduce using rule 62 (TYPE -> WORD .)


state 36

    (63) TYPE -> FLOAT .

    LBRKT           reduce using rule 63 (TYPE -> FLOAT .)
    DIM             reduce using rule 63 (TYPE -> FLOAT .)
    SUB             reduce using rule 63 (TYPE -> FLOAT .)
    BEGIN           reduce using rule 63 (TYPE -> FLOAT .)


state 37

    (64) TYPE -> STRING .

    LBRKT           reduce using rule 64 (TYPE -> STRING .)
    DIM             reduce using rule 64 (TYPE -> STRING .)
    SUB             reduce using rule 64 (TYPE -> STRING .)
    BEGIN           reduce using rule 64 (TYPE -> STRING .)


state 38

    (13) S -> S0 S .

    SCHLUSS         reduce using rule 13 (S -> S0 S .)
    RUKKHER         reduce using rule 13 (S -> S0 S .)
    WAHREND         reduce using rule 13 (S -> S0 S .)
    ENDE            reduce using rule 13 (S -> S0 S .)
    SONNST          reduce using rule 13 (S -> S0 S .)


state 39

    (15) S0 -> IDORAMC ASSIGN . E
    (23) E -> . T
    (24) E -> . E PLUS T
    (25) E -> . E MINUS T
    (26) T -> . F
    (27) T -> . T TIMES F
    (28) T -> . T DIVIDE F
    (29) T -> .
    (30) F -> . ID
    (31) F -> . VALUE
    (32) F -> . FLT
    (33) F -> . LPAREN E RPAREN
    (34) F -> .

  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for EIN resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for AUS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for GSUB resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for WAHREND resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for TUN resolved using rule 29 (T -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for WENN resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for SCHLUSS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for RUKKHER resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for ENDE resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for SONNST resolved using rule 29 (T -> .)
    TIMES           reduce using rule 29 (T -> .)
    DIVIDE          reduce using rule 29 (T -> .)
    PLUS            reduce using rule 29 (T -> .)
    MINUS           reduce using rule 29 (T -> .)
    EIN             reduce using rule 29 (T -> .)
    AUS             reduce using rule 29 (T -> .)
    GSUB            reduce using rule 29 (T -> .)
    WAHREND         reduce using rule 29 (T -> .)
    TUN             reduce using rule 29 (T -> .)
    WENN            reduce using rule 29 (T -> .)
    SCHLUSS         reduce using rule 29 (T -> .)
    RUKKHER         reduce using rule 29 (T -> .)
    ENDE            reduce using rule 29 (T -> .)
    SONNST          reduce using rule 29 (T -> .)
    ID              shift and go to state 62
    VALUE           shift and go to state 63
    FLT             shift and go to state 64
    LPAREN          shift and go to state 65

  ! ID              [ reduce using rule 29 (T -> .) ]
  ! TIMES           [ reduce using rule 34 (F -> .) ]
  ! DIVIDE          [ reduce using rule 34 (F -> .) ]
  ! PLUS            [ reduce using rule 34 (F -> .) ]
  ! MINUS           [ reduce using rule 34 (F -> .) ]
  ! EIN             [ reduce using rule 34 (F -> .) ]
  ! AUS             [ reduce using rule 34 (F -> .) ]
  ! GSUB            [ reduce using rule 34 (F -> .) ]
  ! WAHREND         [ reduce using rule 34 (F -> .) ]
  ! TUN             [ reduce using rule 34 (F -> .) ]
  ! ID              [ reduce using rule 34 (F -> .) ]
  ! WENN            [ reduce using rule 34 (F -> .) ]
  ! SCHLUSS         [ reduce using rule 34 (F -> .) ]
  ! RUKKHER         [ reduce using rule 34 (F -> .) ]
  ! ENDE            [ reduce using rule 34 (F -> .) ]
  ! SONNST          [ reduce using rule 34 (F -> .) ]

    E                              shift and go to state 59
    T                              shift and go to state 60
    F                              shift and go to state 61

state 40

    (16) S0 -> EIN LPAREN . IDORAMC INPUT RPAREN
    (36) IDORAMC -> . ID
    (37) IDORAMC -> . ID AMC1

    ID              shift and go to state 26

    IDORAMC                        shift and go to state 66

state 41

    (17) S0 -> AUS LPAREN . EXP OUTPUT RPAREN
    (35) EXP -> .

    COMMA           reduce using rule 35 (EXP -> .)
    RPAREN          reduce using rule 35 (EXP -> .)

    EXP                            shift and go to state 67

state 42

    (18) S0 -> GSUB ID .

    EIN             reduce using rule 18 (S0 -> GSUB ID .)
    AUS             reduce using rule 18 (S0 -> GSUB ID .)
    GSUB            reduce using rule 18 (S0 -> GSUB ID .)
    WAHREND         reduce using rule 18 (S0 -> GSUB ID .)
    TUN             reduce using rule 18 (S0 -> GSUB ID .)
    ID              reduce using rule 18 (S0 -> GSUB ID .)
    WENN            reduce using rule 18 (S0 -> GSUB ID .)
    SCHLUSS         reduce using rule 18 (S0 -> GSUB ID .)
    RUKKHER         reduce using rule 18 (S0 -> GSUB ID .)
    ENDE            reduce using rule 18 (S0 -> GSUB ID .)
    SONNST          reduce using rule 18 (S0 -> GSUB ID .)


state 43

    (37) IDORAMC -> ID AMC1 .

    ASSIGN          reduce using rule 37 (IDORAMC -> ID AMC1 .)
    COMMA           reduce using rule 37 (IDORAMC -> ID AMC1 .)
    RPAREN          reduce using rule 37 (IDORAMC -> ID AMC1 .)


state 44

    (67) AMC1 -> LBRKT . VALUE RBRKT AMC2
    (68) AMC1 -> LBRKT . ID RBRKT AMC2
    (69) AMC1 -> LBRKT . VALUE RBRKT
    (70) AMC1 -> LBRKT . ID RBRKT

    VALUE           shift and go to state 68
    ID              shift and go to state 69


state 45

    (19) S0 -> W SD . END
    (57) END -> . ENDE

    ENDE            shift and go to state 71

    END                            shift and go to state 70

state 46

    (54) SD -> SD0 . W1
    (53) W1 -> . DANN S

    DANN            shift and go to state 52

    W1                             shift and go to state 72

state 47

    (56) SD0 -> SONNST .

    DANN            reduce using rule 56 (SD0 -> SONNST .)


state 48

    (20) S0 -> WAHREND CONDITION . S ENDE
    (46) CONDITION -> CONDITION . AND CONDITION
    (47) CONDITION -> CONDITION . OR CONDITION
    (13) S -> . S0 S
    (14) S -> .
    (15) S0 -> . IDORAMC ASSIGN E
    (16) S0 -> . EIN LPAREN IDORAMC INPUT RPAREN
    (17) S0 -> . AUS LPAREN EXP OUTPUT RPAREN
    (18) S0 -> . GSUB ID
    (19) S0 -> . W SD END
    (20) S0 -> . WAHREND CONDITION S ENDE
    (21) S0 -> . TUN S WAHREND CONDITION
    (22) S0 -> .
    (36) IDORAMC -> . ID
    (37) IDORAMC -> . ID AMC1
    (51) W -> . W0 W1
    (52) W0 -> . WENN CONDITION

  ! shift/reduce conflict for EIN resolved as shift
  ! shift/reduce conflict for AUS resolved as shift
  ! shift/reduce conflict for GSUB resolved as shift
  ! shift/reduce conflict for WAHREND resolved as shift
  ! shift/reduce conflict for TUN resolved as shift
  ! reduce/reduce conflict for ENDE resolved using rule 14 (S -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WENN resolved as shift
    AND             shift and go to state 74
    OR              shift and go to state 75
    ENDE            reduce using rule 14 (S -> .)
    EIN             shift and go to state 23
    AUS             shift and go to state 24
    GSUB            shift and go to state 25
    WAHREND         shift and go to state 28
    TUN             shift and go to state 29
    ID              shift and go to state 26
    WENN            shift and go to state 31

  ! EIN             [ reduce using rule 22 (S0 -> .) ]
  ! AUS             [ reduce using rule 22 (S0 -> .) ]
  ! GSUB            [ reduce using rule 22 (S0 -> .) ]
  ! WAHREND         [ reduce using rule 22 (S0 -> .) ]
  ! TUN             [ reduce using rule 22 (S0 -> .) ]
  ! ID              [ reduce using rule 22 (S0 -> .) ]
  ! WENN            [ reduce using rule 22 (S0 -> .) ]
  ! ENDE            [ reduce using rule 22 (S0 -> .) ]

    S                              shift and go to state 73
    S0                             shift and go to state 21
    IDORAMC                        shift and go to state 22
    W                              shift and go to state 27
    W0                             shift and go to state 30

state 49

    (40) CONDITION -> LPAREN . CMP GT CMP RPAREN
    (41) CONDITION -> LPAREN . CMP GE CMP RPAREN
    (42) CONDITION -> LPAREN . CMP EQ CMP RPAREN
    (43) CONDITION -> LPAREN . CMP NE CMP RPAREN
    (44) CONDITION -> LPAREN . CMP LE CMP RPAREN
    (45) CONDITION -> LPAREN . CMP LT CMP RPAREN
    (48) CMP -> . VALUE
    (49) CMP -> . ID
    (50) CMP -> . FLT

    VALUE           shift and go to state 77
    ID              shift and go to state 78
    FLT             shift and go to state 79

    CMP                            shift and go to state 76

state 50

    (21) S0 -> TUN S . WAHREND CONDITION

    WAHREND         shift and go to state 80


state 51

    (51) W -> W0 W1 .

    SONNST          reduce using rule 51 (W -> W0 W1 .)
    ENDE            reduce using rule 51 (W -> W0 W1 .)


state 52

    (53) W1 -> DANN . S
    (13) S -> . S0 S
    (14) S -> .
    (15) S0 -> . IDORAMC ASSIGN E
    (16) S0 -> . EIN LPAREN IDORAMC INPUT RPAREN
    (17) S0 -> . AUS LPAREN EXP OUTPUT RPAREN
    (18) S0 -> . GSUB ID
    (19) S0 -> . W SD END
    (20) S0 -> . WAHREND CONDITION S ENDE
    (21) S0 -> . TUN S WAHREND CONDITION
    (22) S0 -> .
    (36) IDORAMC -> . ID
    (37) IDORAMC -> . ID AMC1
    (51) W -> . W0 W1
    (52) W0 -> . WENN CONDITION

  ! shift/reduce conflict for EIN resolved as shift
  ! shift/reduce conflict for AUS resolved as shift
  ! shift/reduce conflict for GSUB resolved as shift
  ! shift/reduce conflict for WAHREND resolved as shift
  ! shift/reduce conflict for TUN resolved as shift
  ! reduce/reduce conflict for SONNST resolved using rule 14 (S -> .)
  ! reduce/reduce conflict for ENDE resolved using rule 14 (S -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for WENN resolved as shift
    SONNST          reduce using rule 14 (S -> .)
    ENDE            reduce using rule 14 (S -> .)
    EIN             shift and go to state 23
    AUS             shift and go to state 24
    GSUB            shift and go to state 25
    WAHREND         shift and go to state 28
    TUN             shift and go to state 29
    ID              shift and go to state 26
    WENN            shift and go to state 31

  ! EIN             [ reduce using rule 22 (S0 -> .) ]
  ! AUS             [ reduce using rule 22 (S0 -> .) ]
  ! GSUB            [ reduce using rule 22 (S0 -> .) ]
  ! WAHREND         [ reduce using rule 22 (S0 -> .) ]
  ! TUN             [ reduce using rule 22 (S0 -> .) ]
  ! ID              [ reduce using rule 22 (S0 -> .) ]
  ! WENN            [ reduce using rule 22 (S0 -> .) ]
  ! SONNST          [ reduce using rule 22 (S0 -> .) ]
  ! ENDE            [ reduce using rule 22 (S0 -> .) ]

    S                              shift and go to state 81
    S0                             shift and go to state 21
    IDORAMC                        shift and go to state 22
    W                              shift and go to state 27
    W0                             shift and go to state 30

state 53

    (52) W0 -> WENN CONDITION .
    (46) CONDITION -> CONDITION . AND CONDITION
    (47) CONDITION -> CONDITION . OR CONDITION

    DANN            reduce using rule 52 (W0 -> WENN CONDITION .)
    AND             shift and go to state 74
    OR              shift and go to state 75


state 54

    (9) R -> R0 COLON B RUKKHER . R
    (9) R -> . R0 COLON B RUKKHER R
    (10) R -> .
    (11) R0 -> . SUB ID

    BEGIN           reduce using rule 10 (R -> .)
    SUB             shift and go to state 8

    R0                             shift and go to state 7
    R                              shift and go to state 82

state 55

    (6) V1 -> COMMA ID V1 .

    DIM             reduce using rule 6 (V1 -> COMMA ID V1 .)
    SUB             reduce using rule 6 (V1 -> COMMA ID V1 .)
    BEGIN           reduce using rule 6 (V1 -> COMMA ID V1 .)


state 56

    (7) V1 -> COMMA ID V2 .

    DIM             reduce using rule 7 (V1 -> COMMA ID V2 .)
    SUB             reduce using rule 7 (V1 -> COMMA ID V2 .)
    BEGIN           reduce using rule 7 (V1 -> COMMA ID V2 .)


state 57

    (8) V2 -> ALS TYPE AMC0 .

    DIM             reduce using rule 8 (V2 -> ALS TYPE AMC0 .)
    SUB             reduce using rule 8 (V2 -> ALS TYPE AMC0 .)
    BEGIN           reduce using rule 8 (V2 -> ALS TYPE AMC0 .)


state 58

    (65) AMC0 -> AMC1 .

    DIM             reduce using rule 65 (AMC0 -> AMC1 .)
    SUB             reduce using rule 65 (AMC0 -> AMC1 .)
    BEGIN           reduce using rule 65 (AMC0 -> AMC1 .)


state 59

    (15) S0 -> IDORAMC ASSIGN E .
    (24) E -> E . PLUS T
    (25) E -> E . MINUS T

    EIN             reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    AUS             reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    GSUB            reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    WAHREND         reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    TUN             reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    ID              reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    WENN            reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    SCHLUSS         reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    RUKKHER         reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    ENDE            reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    SONNST          reduce using rule 15 (S0 -> IDORAMC ASSIGN E .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 60

    (23) E -> T .
    (27) T -> T . TIMES F
    (28) T -> T . DIVIDE F

    PLUS            reduce using rule 23 (E -> T .)
    MINUS           reduce using rule 23 (E -> T .)
    EIN             reduce using rule 23 (E -> T .)
    AUS             reduce using rule 23 (E -> T .)
    GSUB            reduce using rule 23 (E -> T .)
    WAHREND         reduce using rule 23 (E -> T .)
    TUN             reduce using rule 23 (E -> T .)
    ID              reduce using rule 23 (E -> T .)
    WENN            reduce using rule 23 (E -> T .)
    SCHLUSS         reduce using rule 23 (E -> T .)
    RUKKHER         reduce using rule 23 (E -> T .)
    ENDE            reduce using rule 23 (E -> T .)
    SONNST          reduce using rule 23 (E -> T .)
    RPAREN          reduce using rule 23 (E -> T .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 61

    (26) T -> F .

    TIMES           reduce using rule 26 (T -> F .)
    DIVIDE          reduce using rule 26 (T -> F .)
    PLUS            reduce using rule 26 (T -> F .)
    MINUS           reduce using rule 26 (T -> F .)
    EIN             reduce using rule 26 (T -> F .)
    AUS             reduce using rule 26 (T -> F .)
    GSUB            reduce using rule 26 (T -> F .)
    WAHREND         reduce using rule 26 (T -> F .)
    TUN             reduce using rule 26 (T -> F .)
    ID              reduce using rule 26 (T -> F .)
    WENN            reduce using rule 26 (T -> F .)
    SCHLUSS         reduce using rule 26 (T -> F .)
    RUKKHER         reduce using rule 26 (T -> F .)
    ENDE            reduce using rule 26 (T -> F .)
    SONNST          reduce using rule 26 (T -> F .)
    RPAREN          reduce using rule 26 (T -> F .)


state 62

    (30) F -> ID .

    TIMES           reduce using rule 30 (F -> ID .)
    DIVIDE          reduce using rule 30 (F -> ID .)
    PLUS            reduce using rule 30 (F -> ID .)
    MINUS           reduce using rule 30 (F -> ID .)
    EIN             reduce using rule 30 (F -> ID .)
    AUS             reduce using rule 30 (F -> ID .)
    GSUB            reduce using rule 30 (F -> ID .)
    WAHREND         reduce using rule 30 (F -> ID .)
    TUN             reduce using rule 30 (F -> ID .)
    ID              reduce using rule 30 (F -> ID .)
    WENN            reduce using rule 30 (F -> ID .)
    SCHLUSS         reduce using rule 30 (F -> ID .)
    RUKKHER         reduce using rule 30 (F -> ID .)
    ENDE            reduce using rule 30 (F -> ID .)
    SONNST          reduce using rule 30 (F -> ID .)
    RPAREN          reduce using rule 30 (F -> ID .)


state 63

    (31) F -> VALUE .

    TIMES           reduce using rule 31 (F -> VALUE .)
    DIVIDE          reduce using rule 31 (F -> VALUE .)
    PLUS            reduce using rule 31 (F -> VALUE .)
    MINUS           reduce using rule 31 (F -> VALUE .)
    EIN             reduce using rule 31 (F -> VALUE .)
    AUS             reduce using rule 31 (F -> VALUE .)
    GSUB            reduce using rule 31 (F -> VALUE .)
    WAHREND         reduce using rule 31 (F -> VALUE .)
    TUN             reduce using rule 31 (F -> VALUE .)
    ID              reduce using rule 31 (F -> VALUE .)
    WENN            reduce using rule 31 (F -> VALUE .)
    SCHLUSS         reduce using rule 31 (F -> VALUE .)
    RUKKHER         reduce using rule 31 (F -> VALUE .)
    ENDE            reduce using rule 31 (F -> VALUE .)
    SONNST          reduce using rule 31 (F -> VALUE .)
    RPAREN          reduce using rule 31 (F -> VALUE .)


state 64

    (32) F -> FLT .

    TIMES           reduce using rule 32 (F -> FLT .)
    DIVIDE          reduce using rule 32 (F -> FLT .)
    PLUS            reduce using rule 32 (F -> FLT .)
    MINUS           reduce using rule 32 (F -> FLT .)
    EIN             reduce using rule 32 (F -> FLT .)
    AUS             reduce using rule 32 (F -> FLT .)
    GSUB            reduce using rule 32 (F -> FLT .)
    WAHREND         reduce using rule 32 (F -> FLT .)
    TUN             reduce using rule 32 (F -> FLT .)
    ID              reduce using rule 32 (F -> FLT .)
    WENN            reduce using rule 32 (F -> FLT .)
    SCHLUSS         reduce using rule 32 (F -> FLT .)
    RUKKHER         reduce using rule 32 (F -> FLT .)
    ENDE            reduce using rule 32 (F -> FLT .)
    SONNST          reduce using rule 32 (F -> FLT .)
    RPAREN          reduce using rule 32 (F -> FLT .)


state 65

    (33) F -> LPAREN . E RPAREN
    (23) E -> . T
    (24) E -> . E PLUS T
    (25) E -> . E MINUS T
    (26) T -> . F
    (27) T -> . T TIMES F
    (28) T -> . T DIVIDE F
    (29) T -> .
    (30) F -> . ID
    (31) F -> . VALUE
    (32) F -> . FLT
    (33) F -> . LPAREN E RPAREN
    (34) F -> .

  ! reduce/reduce conflict for TIMES resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 29 (T -> .)
    TIMES           reduce using rule 29 (T -> .)
    DIVIDE          reduce using rule 29 (T -> .)
    RPAREN          reduce using rule 29 (T -> .)
    PLUS            reduce using rule 29 (T -> .)
    MINUS           reduce using rule 29 (T -> .)
    ID              shift and go to state 62
    VALUE           shift and go to state 63
    FLT             shift and go to state 64
    LPAREN          shift and go to state 65

  ! TIMES           [ reduce using rule 34 (F -> .) ]
  ! DIVIDE          [ reduce using rule 34 (F -> .) ]
  ! RPAREN          [ reduce using rule 34 (F -> .) ]
  ! PLUS            [ reduce using rule 34 (F -> .) ]
  ! MINUS           [ reduce using rule 34 (F -> .) ]

    E                              shift and go to state 87
    T                              shift and go to state 60
    F                              shift and go to state 61

state 66

    (16) S0 -> EIN LPAREN IDORAMC . INPUT RPAREN
    (58) INPUT -> . COMMA IDORAMC INPUT
    (59) INPUT -> .

    COMMA           shift and go to state 89
    RPAREN          reduce using rule 59 (INPUT -> .)

    INPUT                          shift and go to state 88

state 67

    (17) S0 -> AUS LPAREN EXP . OUTPUT RPAREN
    (60) OUTPUT -> . COMMA EXP OUTPUT
    (61) OUTPUT -> .

    COMMA           shift and go to state 91
    RPAREN          reduce using rule 61 (OUTPUT -> .)

    OUTPUT                         shift and go to state 90

state 68

    (67) AMC1 -> LBRKT VALUE . RBRKT AMC2
    (69) AMC1 -> LBRKT VALUE . RBRKT

    RBRKT           shift and go to state 92


state 69

    (68) AMC1 -> LBRKT ID . RBRKT AMC2
    (70) AMC1 -> LBRKT ID . RBRKT

    RBRKT           shift and go to state 93


state 70

    (19) S0 -> W SD END .

    EIN             reduce using rule 19 (S0 -> W SD END .)
    AUS             reduce using rule 19 (S0 -> W SD END .)
    GSUB            reduce using rule 19 (S0 -> W SD END .)
    WAHREND         reduce using rule 19 (S0 -> W SD END .)
    TUN             reduce using rule 19 (S0 -> W SD END .)
    ID              reduce using rule 19 (S0 -> W SD END .)
    WENN            reduce using rule 19 (S0 -> W SD END .)
    SCHLUSS         reduce using rule 19 (S0 -> W SD END .)
    RUKKHER         reduce using rule 19 (S0 -> W SD END .)
    ENDE            reduce using rule 19 (S0 -> W SD END .)
    SONNST          reduce using rule 19 (S0 -> W SD END .)


state 71

    (57) END -> ENDE .

    EIN             reduce using rule 57 (END -> ENDE .)
    AUS             reduce using rule 57 (END -> ENDE .)
    GSUB            reduce using rule 57 (END -> ENDE .)
    WAHREND         reduce using rule 57 (END -> ENDE .)
    TUN             reduce using rule 57 (END -> ENDE .)
    ID              reduce using rule 57 (END -> ENDE .)
    WENN            reduce using rule 57 (END -> ENDE .)
    SCHLUSS         reduce using rule 57 (END -> ENDE .)
    RUKKHER         reduce using rule 57 (END -> ENDE .)
    ENDE            reduce using rule 57 (END -> ENDE .)
    SONNST          reduce using rule 57 (END -> ENDE .)


state 72

    (54) SD -> SD0 W1 .

    ENDE            reduce using rule 54 (SD -> SD0 W1 .)


state 73

    (20) S0 -> WAHREND CONDITION S . ENDE

    ENDE            shift and go to state 94


state 74

    (46) CONDITION -> CONDITION AND . CONDITION
    (40) CONDITION -> . LPAREN CMP GT CMP RPAREN
    (41) CONDITION -> . LPAREN CMP GE CMP RPAREN
    (42) CONDITION -> . LPAREN CMP EQ CMP RPAREN
    (43) CONDITION -> . LPAREN CMP NE CMP RPAREN
    (44) CONDITION -> . LPAREN CMP LE CMP RPAREN
    (45) CONDITION -> . LPAREN CMP LT CMP RPAREN
    (46) CONDITION -> . CONDITION AND CONDITION
    (47) CONDITION -> . CONDITION OR CONDITION

    LPAREN          shift and go to state 49

    CONDITION                      shift and go to state 95

state 75

    (47) CONDITION -> CONDITION OR . CONDITION
    (40) CONDITION -> . LPAREN CMP GT CMP RPAREN
    (41) CONDITION -> . LPAREN CMP GE CMP RPAREN
    (42) CONDITION -> . LPAREN CMP EQ CMP RPAREN
    (43) CONDITION -> . LPAREN CMP NE CMP RPAREN
    (44) CONDITION -> . LPAREN CMP LE CMP RPAREN
    (45) CONDITION -> . LPAREN CMP LT CMP RPAREN
    (46) CONDITION -> . CONDITION AND CONDITION
    (47) CONDITION -> . CONDITION OR CONDITION

    LPAREN          shift and go to state 49

    CONDITION                      shift and go to state 96

state 76

    (40) CONDITION -> LPAREN CMP . GT CMP RPAREN
    (41) CONDITION -> LPAREN CMP . GE CMP RPAREN
    (42) CONDITION -> LPAREN CMP . EQ CMP RPAREN
    (43) CONDITION -> LPAREN CMP . NE CMP RPAREN
    (44) CONDITION -> LPAREN CMP . LE CMP RPAREN
    (45) CONDITION -> LPAREN CMP . LT CMP RPAREN

    GT              shift and go to state 97
    GE              shift and go to state 98
    EQ              shift and go to state 99
    NE              shift and go to state 100
    LE              shift and go to state 101
    LT              shift and go to state 102


state 77

    (48) CMP -> VALUE .

    GT              reduce using rule 48 (CMP -> VALUE .)
    GE              reduce using rule 48 (CMP -> VALUE .)
    EQ              reduce using rule 48 (CMP -> VALUE .)
    NE              reduce using rule 48 (CMP -> VALUE .)
    LE              reduce using rule 48 (CMP -> VALUE .)
    LT              reduce using rule 48 (CMP -> VALUE .)
    RPAREN          reduce using rule 48 (CMP -> VALUE .)


state 78

    (49) CMP -> ID .

    GT              reduce using rule 49 (CMP -> ID .)
    GE              reduce using rule 49 (CMP -> ID .)
    EQ              reduce using rule 49 (CMP -> ID .)
    NE              reduce using rule 49 (CMP -> ID .)
    LE              reduce using rule 49 (CMP -> ID .)
    LT              reduce using rule 49 (CMP -> ID .)
    RPAREN          reduce using rule 49 (CMP -> ID .)


state 79

    (50) CMP -> FLT .

    GT              reduce using rule 50 (CMP -> FLT .)
    GE              reduce using rule 50 (CMP -> FLT .)
    EQ              reduce using rule 50 (CMP -> FLT .)
    NE              reduce using rule 50 (CMP -> FLT .)
    LE              reduce using rule 50 (CMP -> FLT .)
    LT              reduce using rule 50 (CMP -> FLT .)
    RPAREN          reduce using rule 50 (CMP -> FLT .)


state 80

    (21) S0 -> TUN S WAHREND . CONDITION
    (40) CONDITION -> . LPAREN CMP GT CMP RPAREN
    (41) CONDITION -> . LPAREN CMP GE CMP RPAREN
    (42) CONDITION -> . LPAREN CMP EQ CMP RPAREN
    (43) CONDITION -> . LPAREN CMP NE CMP RPAREN
    (44) CONDITION -> . LPAREN CMP LE CMP RPAREN
    (45) CONDITION -> . LPAREN CMP LT CMP RPAREN
    (46) CONDITION -> . CONDITION AND CONDITION
    (47) CONDITION -> . CONDITION OR CONDITION

    LPAREN          shift and go to state 49

    CONDITION                      shift and go to state 103

state 81

    (53) W1 -> DANN S .

    SONNST          reduce using rule 53 (W1 -> DANN S .)
    ENDE            reduce using rule 53 (W1 -> DANN S .)


state 82

    (9) R -> R0 COLON B RUKKHER R .

    BEGIN           reduce using rule 9 (R -> R0 COLON B RUKKHER R .)


state 83

    (24) E -> E PLUS . T
    (26) T -> . F
    (27) T -> . T TIMES F
    (28) T -> . T DIVIDE F
    (29) T -> .
    (30) F -> . ID
    (31) F -> . VALUE
    (32) F -> . FLT
    (33) F -> . LPAREN E RPAREN
    (34) F -> .

  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for EIN resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for AUS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for GSUB resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for WAHREND resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for TUN resolved using rule 29 (T -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for WENN resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for SCHLUSS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for RUKKHER resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for ENDE resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for SONNST resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 29 (T -> .)
    TIMES           reduce using rule 29 (T -> .)
    DIVIDE          reduce using rule 29 (T -> .)
    PLUS            reduce using rule 29 (T -> .)
    MINUS           reduce using rule 29 (T -> .)
    EIN             reduce using rule 29 (T -> .)
    AUS             reduce using rule 29 (T -> .)
    GSUB            reduce using rule 29 (T -> .)
    WAHREND         reduce using rule 29 (T -> .)
    TUN             reduce using rule 29 (T -> .)
    WENN            reduce using rule 29 (T -> .)
    SCHLUSS         reduce using rule 29 (T -> .)
    RUKKHER         reduce using rule 29 (T -> .)
    ENDE            reduce using rule 29 (T -> .)
    SONNST          reduce using rule 29 (T -> .)
    RPAREN          reduce using rule 29 (T -> .)
    ID              shift and go to state 62
    VALUE           shift and go to state 63
    FLT             shift and go to state 64
    LPAREN          shift and go to state 65

  ! ID              [ reduce using rule 29 (T -> .) ]
  ! TIMES           [ reduce using rule 34 (F -> .) ]
  ! DIVIDE          [ reduce using rule 34 (F -> .) ]
  ! PLUS            [ reduce using rule 34 (F -> .) ]
  ! MINUS           [ reduce using rule 34 (F -> .) ]
  ! EIN             [ reduce using rule 34 (F -> .) ]
  ! AUS             [ reduce using rule 34 (F -> .) ]
  ! GSUB            [ reduce using rule 34 (F -> .) ]
  ! WAHREND         [ reduce using rule 34 (F -> .) ]
  ! TUN             [ reduce using rule 34 (F -> .) ]
  ! ID              [ reduce using rule 34 (F -> .) ]
  ! WENN            [ reduce using rule 34 (F -> .) ]
  ! SCHLUSS         [ reduce using rule 34 (F -> .) ]
  ! RUKKHER         [ reduce using rule 34 (F -> .) ]
  ! ENDE            [ reduce using rule 34 (F -> .) ]
  ! SONNST          [ reduce using rule 34 (F -> .) ]
  ! RPAREN          [ reduce using rule 34 (F -> .) ]

    T                              shift and go to state 104
    F                              shift and go to state 61

state 84

    (25) E -> E MINUS . T
    (26) T -> . F
    (27) T -> . T TIMES F
    (28) T -> . T DIVIDE F
    (29) T -> .
    (30) F -> . ID
    (31) F -> . VALUE
    (32) F -> . FLT
    (33) F -> . LPAREN E RPAREN
    (34) F -> .

  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for EIN resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for AUS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for GSUB resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for WAHREND resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for TUN resolved using rule 29 (T -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! reduce/reduce conflict for WENN resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for SCHLUSS resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for RUKKHER resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for ENDE resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for SONNST resolved using rule 29 (T -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 29 (T -> .)
    TIMES           reduce using rule 29 (T -> .)
    DIVIDE          reduce using rule 29 (T -> .)
    PLUS            reduce using rule 29 (T -> .)
    MINUS           reduce using rule 29 (T -> .)
    EIN             reduce using rule 29 (T -> .)
    AUS             reduce using rule 29 (T -> .)
    GSUB            reduce using rule 29 (T -> .)
    WAHREND         reduce using rule 29 (T -> .)
    TUN             reduce using rule 29 (T -> .)
    WENN            reduce using rule 29 (T -> .)
    SCHLUSS         reduce using rule 29 (T -> .)
    RUKKHER         reduce using rule 29 (T -> .)
    ENDE            reduce using rule 29 (T -> .)
    SONNST          reduce using rule 29 (T -> .)
    RPAREN          reduce using rule 29 (T -> .)
    ID              shift and go to state 62
    VALUE           shift and go to state 63
    FLT             shift and go to state 64
    LPAREN          shift and go to state 65

  ! ID              [ reduce using rule 29 (T -> .) ]
  ! TIMES           [ reduce using rule 34 (F -> .) ]
  ! DIVIDE          [ reduce using rule 34 (F -> .) ]
  ! PLUS            [ reduce using rule 34 (F -> .) ]
  ! MINUS           [ reduce using rule 34 (F -> .) ]
  ! EIN             [ reduce using rule 34 (F -> .) ]
  ! AUS             [ reduce using rule 34 (F -> .) ]
  ! GSUB            [ reduce using rule 34 (F -> .) ]
  ! WAHREND         [ reduce using rule 34 (F -> .) ]
  ! TUN             [ reduce using rule 34 (F -> .) ]
  ! ID              [ reduce using rule 34 (F -> .) ]
  ! WENN            [ reduce using rule 34 (F -> .) ]
  ! SCHLUSS         [ reduce using rule 34 (F -> .) ]
  ! RUKKHER         [ reduce using rule 34 (F -> .) ]
  ! ENDE            [ reduce using rule 34 (F -> .) ]
  ! SONNST          [ reduce using rule 34 (F -> .) ]
  ! RPAREN          [ reduce using rule 34 (F -> .) ]

    T                              shift and go to state 105
    F                              shift and go to state 61

state 85

    (27) T -> T TIMES . F
    (30) F -> . ID
    (31) F -> . VALUE
    (32) F -> . FLT
    (33) F -> . LPAREN E RPAREN
    (34) F -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 62
    VALUE           shift and go to state 63
    FLT             shift and go to state 64
    LPAREN          shift and go to state 65
    TIMES           reduce using rule 34 (F -> .)
    DIVIDE          reduce using rule 34 (F -> .)
    PLUS            reduce using rule 34 (F -> .)
    MINUS           reduce using rule 34 (F -> .)
    EIN             reduce using rule 34 (F -> .)
    AUS             reduce using rule 34 (F -> .)
    GSUB            reduce using rule 34 (F -> .)
    WAHREND         reduce using rule 34 (F -> .)
    TUN             reduce using rule 34 (F -> .)
    WENN            reduce using rule 34 (F -> .)
    SCHLUSS         reduce using rule 34 (F -> .)
    RUKKHER         reduce using rule 34 (F -> .)
    ENDE            reduce using rule 34 (F -> .)
    SONNST          reduce using rule 34 (F -> .)
    RPAREN          reduce using rule 34 (F -> .)

  ! ID              [ reduce using rule 34 (F -> .) ]

    F                              shift and go to state 106

state 86

    (28) T -> T DIVIDE . F
    (30) F -> . ID
    (31) F -> . VALUE
    (32) F -> . FLT
    (33) F -> . LPAREN E RPAREN
    (34) F -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 62
    VALUE           shift and go to state 63
    FLT             shift and go to state 64
    LPAREN          shift and go to state 65
    TIMES           reduce using rule 34 (F -> .)
    DIVIDE          reduce using rule 34 (F -> .)
    PLUS            reduce using rule 34 (F -> .)
    MINUS           reduce using rule 34 (F -> .)
    EIN             reduce using rule 34 (F -> .)
    AUS             reduce using rule 34 (F -> .)
    GSUB            reduce using rule 34 (F -> .)
    WAHREND         reduce using rule 34 (F -> .)
    TUN             reduce using rule 34 (F -> .)
    WENN            reduce using rule 34 (F -> .)
    SCHLUSS         reduce using rule 34 (F -> .)
    RUKKHER         reduce using rule 34 (F -> .)
    ENDE            reduce using rule 34 (F -> .)
    SONNST          reduce using rule 34 (F -> .)
    RPAREN          reduce using rule 34 (F -> .)

  ! ID              [ reduce using rule 34 (F -> .) ]

    F                              shift and go to state 107

state 87

    (33) F -> LPAREN E . RPAREN
    (24) E -> E . PLUS T
    (25) E -> E . MINUS T

    RPAREN          shift and go to state 108
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 88

    (16) S0 -> EIN LPAREN IDORAMC INPUT . RPAREN

    RPAREN          shift and go to state 109


state 89

    (58) INPUT -> COMMA . IDORAMC INPUT
    (36) IDORAMC -> . ID
    (37) IDORAMC -> . ID AMC1

    ID              shift and go to state 26

    IDORAMC                        shift and go to state 110

state 90

    (17) S0 -> AUS LPAREN EXP OUTPUT . RPAREN

    RPAREN          shift and go to state 111


state 91

    (60) OUTPUT -> COMMA . EXP OUTPUT
    (35) EXP -> .

    COMMA           reduce using rule 35 (EXP -> .)
    RPAREN          reduce using rule 35 (EXP -> .)

    EXP                            shift and go to state 112

state 92

    (67) AMC1 -> LBRKT VALUE RBRKT . AMC2
    (69) AMC1 -> LBRKT VALUE RBRKT .
    (72) AMC2 -> . LBRKT VALUE RBRKT AMC3
    (73) AMC2 -> . LBRKT ID RBRKT AMC3
    (74) AMC2 -> . LBRKT VALUE RBRKT
    (75) AMC2 -> . LBRKT ID RBRKT
    (76) AMC2 -> .

  ! reduce/reduce conflict for ASSIGN resolved using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
  ! reduce/reduce conflict for COMMA resolved using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
  ! reduce/reduce conflict for DIM resolved using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
  ! reduce/reduce conflict for SUB resolved using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
  ! reduce/reduce conflict for BEGIN resolved using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
    ASSIGN          reduce using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
    COMMA           reduce using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
    RPAREN          reduce using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
    DIM             reduce using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
    SUB             reduce using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
    BEGIN           reduce using rule 69 (AMC1 -> LBRKT VALUE RBRKT .)
    LBRKT           shift and go to state 113

  ! ASSIGN          [ reduce using rule 76 (AMC2 -> .) ]
  ! COMMA           [ reduce using rule 76 (AMC2 -> .) ]
  ! RPAREN          [ reduce using rule 76 (AMC2 -> .) ]
  ! DIM             [ reduce using rule 76 (AMC2 -> .) ]
  ! SUB             [ reduce using rule 76 (AMC2 -> .) ]
  ! BEGIN           [ reduce using rule 76 (AMC2 -> .) ]

    AMC2                           shift and go to state 114

state 93

    (68) AMC1 -> LBRKT ID RBRKT . AMC2
    (70) AMC1 -> LBRKT ID RBRKT .
    (72) AMC2 -> . LBRKT VALUE RBRKT AMC3
    (73) AMC2 -> . LBRKT ID RBRKT AMC3
    (74) AMC2 -> . LBRKT VALUE RBRKT
    (75) AMC2 -> . LBRKT ID RBRKT
    (76) AMC2 -> .

  ! reduce/reduce conflict for ASSIGN resolved using rule 70 (AMC1 -> LBRKT ID RBRKT .)
  ! reduce/reduce conflict for COMMA resolved using rule 70 (AMC1 -> LBRKT ID RBRKT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 70 (AMC1 -> LBRKT ID RBRKT .)
  ! reduce/reduce conflict for DIM resolved using rule 70 (AMC1 -> LBRKT ID RBRKT .)
  ! reduce/reduce conflict for SUB resolved using rule 70 (AMC1 -> LBRKT ID RBRKT .)
  ! reduce/reduce conflict for BEGIN resolved using rule 70 (AMC1 -> LBRKT ID RBRKT .)
    ASSIGN          reduce using rule 70 (AMC1 -> LBRKT ID RBRKT .)
    COMMA           reduce using rule 70 (AMC1 -> LBRKT ID RBRKT .)
    RPAREN          reduce using rule 70 (AMC1 -> LBRKT ID RBRKT .)
    DIM             reduce using rule 70 (AMC1 -> LBRKT ID RBRKT .)
    SUB             reduce using rule 70 (AMC1 -> LBRKT ID RBRKT .)
    BEGIN           reduce using rule 70 (AMC1 -> LBRKT ID RBRKT .)
    LBRKT           shift and go to state 113

  ! ASSIGN          [ reduce using rule 76 (AMC2 -> .) ]
  ! COMMA           [ reduce using rule 76 (AMC2 -> .) ]
  ! RPAREN          [ reduce using rule 76 (AMC2 -> .) ]
  ! DIM             [ reduce using rule 76 (AMC2 -> .) ]
  ! SUB             [ reduce using rule 76 (AMC2 -> .) ]
  ! BEGIN           [ reduce using rule 76 (AMC2 -> .) ]

    AMC2                           shift and go to state 115

state 94

    (20) S0 -> WAHREND CONDITION S ENDE .

    EIN             reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)
    AUS             reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)
    GSUB            reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)
    WAHREND         reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)
    TUN             reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)
    ID              reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)
    WENN            reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)
    SCHLUSS         reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)
    RUKKHER         reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)
    ENDE            reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)
    SONNST          reduce using rule 20 (S0 -> WAHREND CONDITION S ENDE .)


state 95

    (46) CONDITION -> CONDITION AND CONDITION .
    (46) CONDITION -> CONDITION . AND CONDITION
    (47) CONDITION -> CONDITION . OR CONDITION

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    EIN             reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    AUS             reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    GSUB            reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    WAHREND         reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    TUN             reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    ID              reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    WENN            reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    ENDE            reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    DANN            reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    SCHLUSS         reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    RUKKHER         reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    SONNST          reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .)
    AND             shift and go to state 74
    OR              shift and go to state 75

  ! AND             [ reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .) ]
  ! OR              [ reduce using rule 46 (CONDITION -> CONDITION AND CONDITION .) ]


state 96

    (47) CONDITION -> CONDITION OR CONDITION .
    (46) CONDITION -> CONDITION . AND CONDITION
    (47) CONDITION -> CONDITION . OR CONDITION

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    EIN             reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    AUS             reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    GSUB            reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    WAHREND         reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    TUN             reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    ID              reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    WENN            reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    ENDE            reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    DANN            reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    SCHLUSS         reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    RUKKHER         reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    SONNST          reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .)
    AND             shift and go to state 74
    OR              shift and go to state 75

  ! AND             [ reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .) ]
  ! OR              [ reduce using rule 47 (CONDITION -> CONDITION OR CONDITION .) ]


state 97

    (40) CONDITION -> LPAREN CMP GT . CMP RPAREN
    (48) CMP -> . VALUE
    (49) CMP -> . ID
    (50) CMP -> . FLT

    VALUE           shift and go to state 77
    ID              shift and go to state 78
    FLT             shift and go to state 79

    CMP                            shift and go to state 116

state 98

    (41) CONDITION -> LPAREN CMP GE . CMP RPAREN
    (48) CMP -> . VALUE
    (49) CMP -> . ID
    (50) CMP -> . FLT

    VALUE           shift and go to state 77
    ID              shift and go to state 78
    FLT             shift and go to state 79

    CMP                            shift and go to state 117

state 99

    (42) CONDITION -> LPAREN CMP EQ . CMP RPAREN
    (48) CMP -> . VALUE
    (49) CMP -> . ID
    (50) CMP -> . FLT

    VALUE           shift and go to state 77
    ID              shift and go to state 78
    FLT             shift and go to state 79

    CMP                            shift and go to state 118

state 100

    (43) CONDITION -> LPAREN CMP NE . CMP RPAREN
    (48) CMP -> . VALUE
    (49) CMP -> . ID
    (50) CMP -> . FLT

    VALUE           shift and go to state 77
    ID              shift and go to state 78
    FLT             shift and go to state 79

    CMP                            shift and go to state 119

state 101

    (44) CONDITION -> LPAREN CMP LE . CMP RPAREN
    (48) CMP -> . VALUE
    (49) CMP -> . ID
    (50) CMP -> . FLT

    VALUE           shift and go to state 77
    ID              shift and go to state 78
    FLT             shift and go to state 79

    CMP                            shift and go to state 120

state 102

    (45) CONDITION -> LPAREN CMP LT . CMP RPAREN
    (48) CMP -> . VALUE
    (49) CMP -> . ID
    (50) CMP -> . FLT

    VALUE           shift and go to state 77
    ID              shift and go to state 78
    FLT             shift and go to state 79

    CMP                            shift and go to state 121

state 103

    (21) S0 -> TUN S WAHREND CONDITION .
    (46) CONDITION -> CONDITION . AND CONDITION
    (47) CONDITION -> CONDITION . OR CONDITION

    EIN             reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    AUS             reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    GSUB            reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    WAHREND         reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    TUN             reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    ID              reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    WENN            reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    SCHLUSS         reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    RUKKHER         reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    ENDE            reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    SONNST          reduce using rule 21 (S0 -> TUN S WAHREND CONDITION .)
    AND             shift and go to state 74
    OR              shift and go to state 75


state 104

    (24) E -> E PLUS T .
    (27) T -> T . TIMES F
    (28) T -> T . DIVIDE F

    PLUS            reduce using rule 24 (E -> E PLUS T .)
    MINUS           reduce using rule 24 (E -> E PLUS T .)
    EIN             reduce using rule 24 (E -> E PLUS T .)
    AUS             reduce using rule 24 (E -> E PLUS T .)
    GSUB            reduce using rule 24 (E -> E PLUS T .)
    WAHREND         reduce using rule 24 (E -> E PLUS T .)
    TUN             reduce using rule 24 (E -> E PLUS T .)
    ID              reduce using rule 24 (E -> E PLUS T .)
    WENN            reduce using rule 24 (E -> E PLUS T .)
    SCHLUSS         reduce using rule 24 (E -> E PLUS T .)
    RUKKHER         reduce using rule 24 (E -> E PLUS T .)
    ENDE            reduce using rule 24 (E -> E PLUS T .)
    SONNST          reduce using rule 24 (E -> E PLUS T .)
    RPAREN          reduce using rule 24 (E -> E PLUS T .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 105

    (25) E -> E MINUS T .
    (27) T -> T . TIMES F
    (28) T -> T . DIVIDE F

    PLUS            reduce using rule 25 (E -> E MINUS T .)
    MINUS           reduce using rule 25 (E -> E MINUS T .)
    EIN             reduce using rule 25 (E -> E MINUS T .)
    AUS             reduce using rule 25 (E -> E MINUS T .)
    GSUB            reduce using rule 25 (E -> E MINUS T .)
    WAHREND         reduce using rule 25 (E -> E MINUS T .)
    TUN             reduce using rule 25 (E -> E MINUS T .)
    ID              reduce using rule 25 (E -> E MINUS T .)
    WENN            reduce using rule 25 (E -> E MINUS T .)
    SCHLUSS         reduce using rule 25 (E -> E MINUS T .)
    RUKKHER         reduce using rule 25 (E -> E MINUS T .)
    ENDE            reduce using rule 25 (E -> E MINUS T .)
    SONNST          reduce using rule 25 (E -> E MINUS T .)
    RPAREN          reduce using rule 25 (E -> E MINUS T .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 106

    (27) T -> T TIMES F .

    TIMES           reduce using rule 27 (T -> T TIMES F .)
    DIVIDE          reduce using rule 27 (T -> T TIMES F .)
    PLUS            reduce using rule 27 (T -> T TIMES F .)
    MINUS           reduce using rule 27 (T -> T TIMES F .)
    EIN             reduce using rule 27 (T -> T TIMES F .)
    AUS             reduce using rule 27 (T -> T TIMES F .)
    GSUB            reduce using rule 27 (T -> T TIMES F .)
    WAHREND         reduce using rule 27 (T -> T TIMES F .)
    TUN             reduce using rule 27 (T -> T TIMES F .)
    ID              reduce using rule 27 (T -> T TIMES F .)
    WENN            reduce using rule 27 (T -> T TIMES F .)
    SCHLUSS         reduce using rule 27 (T -> T TIMES F .)
    RUKKHER         reduce using rule 27 (T -> T TIMES F .)
    ENDE            reduce using rule 27 (T -> T TIMES F .)
    SONNST          reduce using rule 27 (T -> T TIMES F .)
    RPAREN          reduce using rule 27 (T -> T TIMES F .)


state 107

    (28) T -> T DIVIDE F .

    TIMES           reduce using rule 28 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 28 (T -> T DIVIDE F .)
    PLUS            reduce using rule 28 (T -> T DIVIDE F .)
    MINUS           reduce using rule 28 (T -> T DIVIDE F .)
    EIN             reduce using rule 28 (T -> T DIVIDE F .)
    AUS             reduce using rule 28 (T -> T DIVIDE F .)
    GSUB            reduce using rule 28 (T -> T DIVIDE F .)
    WAHREND         reduce using rule 28 (T -> T DIVIDE F .)
    TUN             reduce using rule 28 (T -> T DIVIDE F .)
    ID              reduce using rule 28 (T -> T DIVIDE F .)
    WENN            reduce using rule 28 (T -> T DIVIDE F .)
    SCHLUSS         reduce using rule 28 (T -> T DIVIDE F .)
    RUKKHER         reduce using rule 28 (T -> T DIVIDE F .)
    ENDE            reduce using rule 28 (T -> T DIVIDE F .)
    SONNST          reduce using rule 28 (T -> T DIVIDE F .)
    RPAREN          reduce using rule 28 (T -> T DIVIDE F .)


state 108

    (33) F -> LPAREN E RPAREN .

    TIMES           reduce using rule 33 (F -> LPAREN E RPAREN .)
    DIVIDE          reduce using rule 33 (F -> LPAREN E RPAREN .)
    PLUS            reduce using rule 33 (F -> LPAREN E RPAREN .)
    MINUS           reduce using rule 33 (F -> LPAREN E RPAREN .)
    EIN             reduce using rule 33 (F -> LPAREN E RPAREN .)
    AUS             reduce using rule 33 (F -> LPAREN E RPAREN .)
    GSUB            reduce using rule 33 (F -> LPAREN E RPAREN .)
    WAHREND         reduce using rule 33 (F -> LPAREN E RPAREN .)
    TUN             reduce using rule 33 (F -> LPAREN E RPAREN .)
    ID              reduce using rule 33 (F -> LPAREN E RPAREN .)
    WENN            reduce using rule 33 (F -> LPAREN E RPAREN .)
    SCHLUSS         reduce using rule 33 (F -> LPAREN E RPAREN .)
    RUKKHER         reduce using rule 33 (F -> LPAREN E RPAREN .)
    ENDE            reduce using rule 33 (F -> LPAREN E RPAREN .)
    SONNST          reduce using rule 33 (F -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 33 (F -> LPAREN E RPAREN .)


state 109

    (16) S0 -> EIN LPAREN IDORAMC INPUT RPAREN .

    EIN             reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)
    AUS             reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)
    GSUB            reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)
    WAHREND         reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)
    TUN             reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)
    ID              reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)
    WENN            reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)
    SCHLUSS         reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)
    RUKKHER         reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)
    ENDE            reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)
    SONNST          reduce using rule 16 (S0 -> EIN LPAREN IDORAMC INPUT RPAREN .)


state 110

    (58) INPUT -> COMMA IDORAMC . INPUT
    (58) INPUT -> . COMMA IDORAMC INPUT
    (59) INPUT -> .

    COMMA           shift and go to state 89
    RPAREN          reduce using rule 59 (INPUT -> .)

    INPUT                          shift and go to state 122

state 111

    (17) S0 -> AUS LPAREN EXP OUTPUT RPAREN .

    EIN             reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)
    AUS             reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)
    GSUB            reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)
    WAHREND         reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)
    TUN             reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)
    ID              reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)
    WENN            reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)
    SCHLUSS         reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)
    RUKKHER         reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)
    ENDE            reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)
    SONNST          reduce using rule 17 (S0 -> AUS LPAREN EXP OUTPUT RPAREN .)


state 112

    (60) OUTPUT -> COMMA EXP . OUTPUT
    (60) OUTPUT -> . COMMA EXP OUTPUT
    (61) OUTPUT -> .

    COMMA           shift and go to state 91
    RPAREN          reduce using rule 61 (OUTPUT -> .)

    OUTPUT                         shift and go to state 123

state 113

    (72) AMC2 -> LBRKT . VALUE RBRKT AMC3
    (73) AMC2 -> LBRKT . ID RBRKT AMC3
    (74) AMC2 -> LBRKT . VALUE RBRKT
    (75) AMC2 -> LBRKT . ID RBRKT

    VALUE           shift and go to state 124
    ID              shift and go to state 125


state 114

    (67) AMC1 -> LBRKT VALUE RBRKT AMC2 .

    ASSIGN          reduce using rule 67 (AMC1 -> LBRKT VALUE RBRKT AMC2 .)
    COMMA           reduce using rule 67 (AMC1 -> LBRKT VALUE RBRKT AMC2 .)
    RPAREN          reduce using rule 67 (AMC1 -> LBRKT VALUE RBRKT AMC2 .)
    DIM             reduce using rule 67 (AMC1 -> LBRKT VALUE RBRKT AMC2 .)
    SUB             reduce using rule 67 (AMC1 -> LBRKT VALUE RBRKT AMC2 .)
    BEGIN           reduce using rule 67 (AMC1 -> LBRKT VALUE RBRKT AMC2 .)


state 115

    (68) AMC1 -> LBRKT ID RBRKT AMC2 .

    ASSIGN          reduce using rule 68 (AMC1 -> LBRKT ID RBRKT AMC2 .)
    COMMA           reduce using rule 68 (AMC1 -> LBRKT ID RBRKT AMC2 .)
    RPAREN          reduce using rule 68 (AMC1 -> LBRKT ID RBRKT AMC2 .)
    DIM             reduce using rule 68 (AMC1 -> LBRKT ID RBRKT AMC2 .)
    SUB             reduce using rule 68 (AMC1 -> LBRKT ID RBRKT AMC2 .)
    BEGIN           reduce using rule 68 (AMC1 -> LBRKT ID RBRKT AMC2 .)


state 116

    (40) CONDITION -> LPAREN CMP GT CMP . RPAREN

    RPAREN          shift and go to state 126


state 117

    (41) CONDITION -> LPAREN CMP GE CMP . RPAREN

    RPAREN          shift and go to state 127


state 118

    (42) CONDITION -> LPAREN CMP EQ CMP . RPAREN

    RPAREN          shift and go to state 128


state 119

    (43) CONDITION -> LPAREN CMP NE CMP . RPAREN

    RPAREN          shift and go to state 129


state 120

    (44) CONDITION -> LPAREN CMP LE CMP . RPAREN

    RPAREN          shift and go to state 130


state 121

    (45) CONDITION -> LPAREN CMP LT CMP . RPAREN

    RPAREN          shift and go to state 131


state 122

    (58) INPUT -> COMMA IDORAMC INPUT .

    RPAREN          reduce using rule 58 (INPUT -> COMMA IDORAMC INPUT .)


state 123

    (60) OUTPUT -> COMMA EXP OUTPUT .

    RPAREN          reduce using rule 60 (OUTPUT -> COMMA EXP OUTPUT .)


state 124

    (72) AMC2 -> LBRKT VALUE . RBRKT AMC3
    (74) AMC2 -> LBRKT VALUE . RBRKT

    RBRKT           shift and go to state 132


state 125

    (73) AMC2 -> LBRKT ID . RBRKT AMC3
    (75) AMC2 -> LBRKT ID . RBRKT

    RBRKT           shift and go to state 133


state 126

    (40) CONDITION -> LPAREN CMP GT CMP RPAREN .

    AND             reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    OR              reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    EIN             reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    AUS             reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    GSUB            reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    WAHREND         reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    TUN             reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    ID              reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    WENN            reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    ENDE            reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    DANN            reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    SCHLUSS         reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    RUKKHER         reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)
    SONNST          reduce using rule 40 (CONDITION -> LPAREN CMP GT CMP RPAREN .)


state 127

    (41) CONDITION -> LPAREN CMP GE CMP RPAREN .

    AND             reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    OR              reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    EIN             reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    AUS             reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    GSUB            reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    WAHREND         reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    TUN             reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    ID              reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    WENN            reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    ENDE            reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    DANN            reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    SCHLUSS         reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    RUKKHER         reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)
    SONNST          reduce using rule 41 (CONDITION -> LPAREN CMP GE CMP RPAREN .)


state 128

    (42) CONDITION -> LPAREN CMP EQ CMP RPAREN .

    AND             reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    OR              reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    EIN             reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    AUS             reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    GSUB            reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    WAHREND         reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    TUN             reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    ID              reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    WENN            reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    ENDE            reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    DANN            reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    SCHLUSS         reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    RUKKHER         reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)
    SONNST          reduce using rule 42 (CONDITION -> LPAREN CMP EQ CMP RPAREN .)


state 129

    (43) CONDITION -> LPAREN CMP NE CMP RPAREN .

    AND             reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    OR              reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    EIN             reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    AUS             reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    GSUB            reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    WAHREND         reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    TUN             reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    ID              reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    WENN            reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    ENDE            reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    DANN            reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    SCHLUSS         reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    RUKKHER         reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)
    SONNST          reduce using rule 43 (CONDITION -> LPAREN CMP NE CMP RPAREN .)


state 130

    (44) CONDITION -> LPAREN CMP LE CMP RPAREN .

    AND             reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    OR              reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    EIN             reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    AUS             reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    GSUB            reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    WAHREND         reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    TUN             reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    ID              reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    WENN            reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    ENDE            reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    DANN            reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    SCHLUSS         reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    RUKKHER         reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)
    SONNST          reduce using rule 44 (CONDITION -> LPAREN CMP LE CMP RPAREN .)


state 131

    (45) CONDITION -> LPAREN CMP LT CMP RPAREN .

    AND             reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    OR              reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    EIN             reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    AUS             reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    GSUB            reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    WAHREND         reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    TUN             reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    ID              reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    WENN            reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    ENDE            reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    DANN            reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    SCHLUSS         reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    RUKKHER         reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)
    SONNST          reduce using rule 45 (CONDITION -> LPAREN CMP LT CMP RPAREN .)


state 132

    (72) AMC2 -> LBRKT VALUE RBRKT . AMC3
    (74) AMC2 -> LBRKT VALUE RBRKT .
    (77) AMC3 -> . LBRKT VALUE RBRKT
    (78) AMC3 -> . LBRKT ID RBRKT
    (79) AMC3 -> .

  ! reduce/reduce conflict for ASSIGN resolved using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
  ! reduce/reduce conflict for COMMA resolved using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
  ! reduce/reduce conflict for DIM resolved using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
  ! reduce/reduce conflict for SUB resolved using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
  ! reduce/reduce conflict for BEGIN resolved using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
    ASSIGN          reduce using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
    COMMA           reduce using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
    RPAREN          reduce using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
    DIM             reduce using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
    SUB             reduce using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
    BEGIN           reduce using rule 74 (AMC2 -> LBRKT VALUE RBRKT .)
    LBRKT           shift and go to state 134

  ! ASSIGN          [ reduce using rule 79 (AMC3 -> .) ]
  ! COMMA           [ reduce using rule 79 (AMC3 -> .) ]
  ! RPAREN          [ reduce using rule 79 (AMC3 -> .) ]
  ! DIM             [ reduce using rule 79 (AMC3 -> .) ]
  ! SUB             [ reduce using rule 79 (AMC3 -> .) ]
  ! BEGIN           [ reduce using rule 79 (AMC3 -> .) ]

    AMC3                           shift and go to state 135

state 133

    (73) AMC2 -> LBRKT ID RBRKT . AMC3
    (75) AMC2 -> LBRKT ID RBRKT .
    (77) AMC3 -> . LBRKT VALUE RBRKT
    (78) AMC3 -> . LBRKT ID RBRKT
    (79) AMC3 -> .

  ! reduce/reduce conflict for ASSIGN resolved using rule 75 (AMC2 -> LBRKT ID RBRKT .)
  ! reduce/reduce conflict for COMMA resolved using rule 75 (AMC2 -> LBRKT ID RBRKT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 75 (AMC2 -> LBRKT ID RBRKT .)
  ! reduce/reduce conflict for DIM resolved using rule 75 (AMC2 -> LBRKT ID RBRKT .)
  ! reduce/reduce conflict for SUB resolved using rule 75 (AMC2 -> LBRKT ID RBRKT .)
  ! reduce/reduce conflict for BEGIN resolved using rule 75 (AMC2 -> LBRKT ID RBRKT .)
    ASSIGN          reduce using rule 75 (AMC2 -> LBRKT ID RBRKT .)
    COMMA           reduce using rule 75 (AMC2 -> LBRKT ID RBRKT .)
    RPAREN          reduce using rule 75 (AMC2 -> LBRKT ID RBRKT .)
    DIM             reduce using rule 75 (AMC2 -> LBRKT ID RBRKT .)
    SUB             reduce using rule 75 (AMC2 -> LBRKT ID RBRKT .)
    BEGIN           reduce using rule 75 (AMC2 -> LBRKT ID RBRKT .)
    LBRKT           shift and go to state 134

  ! ASSIGN          [ reduce using rule 79 (AMC3 -> .) ]
  ! COMMA           [ reduce using rule 79 (AMC3 -> .) ]
  ! RPAREN          [ reduce using rule 79 (AMC3 -> .) ]
  ! DIM             [ reduce using rule 79 (AMC3 -> .) ]
  ! SUB             [ reduce using rule 79 (AMC3 -> .) ]
  ! BEGIN           [ reduce using rule 79 (AMC3 -> .) ]

    AMC3                           shift and go to state 136

state 134

    (77) AMC3 -> LBRKT . VALUE RBRKT
    (78) AMC3 -> LBRKT . ID RBRKT

    VALUE           shift and go to state 137
    ID              shift and go to state 138


state 135

    (72) AMC2 -> LBRKT VALUE RBRKT AMC3 .

    ASSIGN          reduce using rule 72 (AMC2 -> LBRKT VALUE RBRKT AMC3 .)
    COMMA           reduce using rule 72 (AMC2 -> LBRKT VALUE RBRKT AMC3 .)
    RPAREN          reduce using rule 72 (AMC2 -> LBRKT VALUE RBRKT AMC3 .)
    DIM             reduce using rule 72 (AMC2 -> LBRKT VALUE RBRKT AMC3 .)
    SUB             reduce using rule 72 (AMC2 -> LBRKT VALUE RBRKT AMC3 .)
    BEGIN           reduce using rule 72 (AMC2 -> LBRKT VALUE RBRKT AMC3 .)


state 136

    (73) AMC2 -> LBRKT ID RBRKT AMC3 .

    ASSIGN          reduce using rule 73 (AMC2 -> LBRKT ID RBRKT AMC3 .)
    COMMA           reduce using rule 73 (AMC2 -> LBRKT ID RBRKT AMC3 .)
    RPAREN          reduce using rule 73 (AMC2 -> LBRKT ID RBRKT AMC3 .)
    DIM             reduce using rule 73 (AMC2 -> LBRKT ID RBRKT AMC3 .)
    SUB             reduce using rule 73 (AMC2 -> LBRKT ID RBRKT AMC3 .)
    BEGIN           reduce using rule 73 (AMC2 -> LBRKT ID RBRKT AMC3 .)


state 137

    (77) AMC3 -> LBRKT VALUE . RBRKT

    RBRKT           shift and go to state 139


state 138

    (78) AMC3 -> LBRKT ID . RBRKT

    RBRKT           shift and go to state 140


state 139

    (77) AMC3 -> LBRKT VALUE RBRKT .

    ASSIGN          reduce using rule 77 (AMC3 -> LBRKT VALUE RBRKT .)
    COMMA           reduce using rule 77 (AMC3 -> LBRKT VALUE RBRKT .)
    RPAREN          reduce using rule 77 (AMC3 -> LBRKT VALUE RBRKT .)
    DIM             reduce using rule 77 (AMC3 -> LBRKT VALUE RBRKT .)
    SUB             reduce using rule 77 (AMC3 -> LBRKT VALUE RBRKT .)
    BEGIN           reduce using rule 77 (AMC3 -> LBRKT VALUE RBRKT .)


state 140

    (78) AMC3 -> LBRKT ID RBRKT .

    ASSIGN          reduce using rule 78 (AMC3 -> LBRKT ID RBRKT .)
    COMMA           reduce using rule 78 (AMC3 -> LBRKT ID RBRKT .)
    RPAREN          reduce using rule 78 (AMC3 -> LBRKT ID RBRKT .)
    DIM             reduce using rule 78 (AMC3 -> LBRKT ID RBRKT .)
    SUB             reduce using rule 78 (AMC3 -> LBRKT ID RBRKT .)
    BEGIN           reduce using rule 78 (AMC3 -> LBRKT ID RBRKT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EIN in state 12 resolved as shift
WARNING: shift/reduce conflict for AUS in state 12 resolved as shift
WARNING: shift/reduce conflict for GSUB in state 12 resolved as shift
WARNING: shift/reduce conflict for WAHREND in state 12 resolved as shift
WARNING: shift/reduce conflict for TUN in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for WENN in state 12 resolved as shift
WARNING: shift/reduce conflict for WAHREND in state 21 resolved as shift
WARNING: shift/reduce conflict for EIN in state 21 resolved as shift
WARNING: shift/reduce conflict for AUS in state 21 resolved as shift
WARNING: shift/reduce conflict for GSUB in state 21 resolved as shift
WARNING: shift/reduce conflict for WAHREND in state 21 resolved as shift
WARNING: shift/reduce conflict for TUN in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for WENN in state 21 resolved as shift
WARNING: shift/reduce conflict for WAHREND in state 29 resolved as shift
WARNING: shift/reduce conflict for EIN in state 29 resolved as shift
WARNING: shift/reduce conflict for AUS in state 29 resolved as shift
WARNING: shift/reduce conflict for GSUB in state 29 resolved as shift
WARNING: shift/reduce conflict for WAHREND in state 29 resolved as shift
WARNING: shift/reduce conflict for TUN in state 29 resolved as shift
WARNING: shift/reduce conflict for ID in state 29 resolved as shift
WARNING: shift/reduce conflict for WENN in state 29 resolved as shift
WARNING: shift/reduce conflict for ID in state 39 resolved as shift
WARNING: shift/reduce conflict for ID in state 39 resolved as shift
WARNING: shift/reduce conflict for EIN in state 48 resolved as shift
WARNING: shift/reduce conflict for AUS in state 48 resolved as shift
WARNING: shift/reduce conflict for GSUB in state 48 resolved as shift
WARNING: shift/reduce conflict for WAHREND in state 48 resolved as shift
WARNING: shift/reduce conflict for TUN in state 48 resolved as shift
WARNING: shift/reduce conflict for ID in state 48 resolved as shift
WARNING: shift/reduce conflict for WENN in state 48 resolved as shift
WARNING: shift/reduce conflict for EIN in state 52 resolved as shift
WARNING: shift/reduce conflict for AUS in state 52 resolved as shift
WARNING: shift/reduce conflict for GSUB in state 52 resolved as shift
WARNING: shift/reduce conflict for WAHREND in state 52 resolved as shift
WARNING: shift/reduce conflict for TUN in state 52 resolved as shift
WARNING: shift/reduce conflict for ID in state 52 resolved as shift
WARNING: shift/reduce conflict for WENN in state 52 resolved as shift
WARNING: shift/reduce conflict for ID in state 83 resolved as shift
WARNING: shift/reduce conflict for ID in state 83 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 86 resolved as shift
WARNING: shift/reduce conflict for AND in state 95 resolved as shift
WARNING: shift/reduce conflict for OR in state 95 resolved as shift
WARNING: shift/reduce conflict for AND in state 96 resolved as shift
WARNING: shift/reduce conflict for OR in state 96 resolved as shift
WARNING: reduce/reduce conflict in state 12 resolved using rule (S -> <empty>)
WARNING: rejected rule (S0 -> <empty>) in state 12
WARNING: reduce/reduce conflict in state 21 resolved using rule (S -> <empty>)
WARNING: rejected rule (S0 -> <empty>) in state 21
WARNING: reduce/reduce conflict in state 26 resolved using rule (IDORAMC -> ID)
WARNING: rejected rule (AMC1 -> <empty>) in state 26
WARNING: reduce/reduce conflict in state 34 resolved using rule (AMC0 -> <empty>)
WARNING: rejected rule (AMC1 -> <empty>) in state 34
WARNING: reduce/reduce conflict in state 39 resolved using rule (T -> <empty>)
WARNING: rejected rule (F -> <empty>) in state 39
WARNING: reduce/reduce conflict in state 48 resolved using rule (S -> <empty>)
WARNING: rejected rule (S0 -> <empty>) in state 48
WARNING: reduce/reduce conflict in state 52 resolved using rule (S -> <empty>)
WARNING: rejected rule (S0 -> <empty>) in state 52
WARNING: reduce/reduce conflict in state 65 resolved using rule (T -> <empty>)
WARNING: rejected rule (F -> <empty>) in state 65
WARNING: reduce/reduce conflict in state 83 resolved using rule (T -> <empty>)
WARNING: rejected rule (F -> <empty>) in state 83
WARNING: reduce/reduce conflict in state 84 resolved using rule (T -> <empty>)
WARNING: rejected rule (F -> <empty>) in state 84
WARNING: reduce/reduce conflict in state 92 resolved using rule (AMC1 -> LBRKT VALUE RBRKT)
WARNING: rejected rule (AMC2 -> <empty>) in state 92
WARNING: reduce/reduce conflict in state 93 resolved using rule (AMC1 -> LBRKT ID RBRKT)
WARNING: rejected rule (AMC2 -> <empty>) in state 93
WARNING: reduce/reduce conflict in state 132 resolved using rule (AMC2 -> LBRKT VALUE RBRKT)
WARNING: rejected rule (AMC3 -> <empty>) in state 132
WARNING: reduce/reduce conflict in state 133 resolved using rule (AMC2 -> LBRKT ID RBRKT)
WARNING: rejected rule (AMC3 -> <empty>) in state 133
WARNING: Rule (S0 -> <empty>) is never reduced
WARNING: Rule (AMC1 -> <empty>) is never reduced
WARNING: Rule (AMC2 -> <empty>) is never reduced
WARNING: Rule (AMC3 -> <empty>) is never reduced
