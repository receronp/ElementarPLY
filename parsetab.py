
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALS AND ASSIGN AUS BEGIN BREAK BTAND BTNOT BTOR COLON COMMA COMMENT DANN DIM DIVIDE DOT EIN ENDE EQ FLOAT FLT FUR GE GSUB GT ID LBRKT LE LPAREN LT MINUS MODULO NE NOT OR PLUS PROGRAMM QUOTE RBRKT RPAREN RUKKHER SCHLUSS SONNST STR STRING SUB SWENN TIMES TUN VALUE WAHREND WENN WORD WRD newline\n    program : PROGRAMM V R B SCHLUSS\n    \n    V : V0 V\n    |\n    \n    V0 : DIM ID V1\n    | DIM ID V2\n    \n    V1 : COMMA ID V1\n    | COMMA ID V2\n    \n    V2 : ALS TYPE AMC0\n    \n    R : R0 COLON B RUKKHER R \n    |\n    \n    R0 : SUB ID\n    \n    B : BEGIN S\n    \n    S : S0 S\n    |\n    \n    S0 : IDORAMC ASSIGN E\n    | EIN LPAREN IDORAMC INPUT RPAREN\n    | AUS LPAREN EXP OUTPUT RPAREN\n    | GSUB ID\n    | WE SD END\n    | WAH END\n    | TUN S WAHREND CONDITION\n    |\n    \n    E : T\n    | E PLUS T\n    | E MINUS T\n    \n    T : F\n    | T TIMES F\n    | T DIVIDE F\n    |\n    \n    F : ID\n    | VALUE\n    | FLT\n    | LPAREN E RPAREN\n    |\n    \n    EXP : \n    \n    IDORAMC : ID\n    | ID AMC1\n    \n    EIDORAMC : ID\n    | ID AMC1\n    \n    CONDITION : CONDITION AND CONDITION1\n    | CONDITION OR CONDITION1\n    | CONDITION1\n    \n    CONDITION1 : LPAREN CMP GT CMP RPAREN\n    | LPAREN CMP GE CMP RPAREN\n    | LPAREN CMP EQ CMP RPAREN\n    | LPAREN CMP NE CMP RPAREN\n    | LPAREN CMP LE CMP RPAREN\n    | LPAREN CMP LT CMP RPAREN\n    \n    CMP : VALUE\n    | ID\n    | FLT\n    \n    WAH : WAH0 WAH1 GZ\n    \n    WAH0 : WAHREND CONDITION\n    \n    WAH1 : S\n    \n    GZ :\n    \n    WE : WE0 WE1 GZ\n    \n    WE0 : WENN CONDITION\n    \n    WE1 : DANN S\n    \n    SD : SONNST WE1\n    |\n    \n    END : ENDE\n    \n    INPUT : COMMA IDORAMC INPUT\n    |\n    \n    OUTPUT : COMMA EXP OUTPUT\n    |\n    \n    TYPE : WORD \n    | FLOAT \n    | STRING     \n    \n    AMC0 :  AMC1\n    |\n    \n    AMC1 : LBRKT VALUE RBRKT AMC2\n    | LBRKT ID RBRKT AMC2\n    | LBRKT VALUE RBRKT\n    | LBRKT ID RBRKT\n    |\n    \n    AMC2 : LBRKT VALUE RBRKT AMC3\n    | LBRKT ID RBRKT AMC3\n    | LBRKT VALUE RBRKT\n    | LBRKT ID RBRKT\n    |\n    \n    AMC3 : LBRKT VALUE RBRKT \n    | LBRKT ID RBRKT\n    |\n    '
    
_lr_action_items = {'PROGRAMM':([0,],[2,]),'$end':([1,19,],[0,-1,]),'SUB':([2,3,4,9,15,16,36,37,38,39,60,61,62,63,64,98,99,119,120,137,138,140,141,144,145,],[-3,8,-3,-2,-4,-5,-70,-66,-67,-68,8,-6,-7,-8,-69,-73,-74,-71,-72,-78,-79,-76,-77,-81,-82,]),'BEGIN':([2,3,4,6,9,13,15,16,36,37,38,39,60,61,62,63,64,88,98,99,119,120,137,138,140,141,144,145,],[-3,-10,-3,12,-2,12,-4,-5,-70,-66,-67,-68,-10,-6,-7,-8,-69,-9,-73,-74,-71,-72,-78,-79,-76,-77,-81,-82,]),'DIM':([2,4,15,16,36,37,38,39,61,62,63,64,98,99,119,120,137,138,140,141,144,145,],[5,5,-4,-5,-70,-66,-67,-68,-6,-7,-8,-69,-73,-74,-71,-72,-78,-79,-76,-77,-81,-82,]),'ID':([5,8,12,17,21,25,29,32,41,42,44,46,49,50,52,53,54,56,65,66,67,68,69,70,71,76,89,90,91,92,95,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,118,131,132,133,134,135,136,139,],[10,14,26,35,26,44,26,26,68,26,-18,75,-20,-61,-53,-42,83,26,-15,-23,-26,-30,-31,-32,68,-19,68,68,68,68,26,-21,-40,-41,83,83,83,83,83,83,-24,-25,-27,-28,-33,-16,-17,130,-43,-44,-45,-46,-47,-48,143,]),'COLON':([7,14,],[13,-11,]),'COMMA':([10,26,35,43,45,72,73,97,98,99,115,117,119,120,137,138,140,141,144,145,],[17,-36,17,-35,-37,95,97,-35,-73,-74,95,97,-71,-72,-78,-79,-76,-77,-81,-82,]),'ALS':([10,35,],[18,18,]),'SCHLUSS':([11,12,20,21,40,41,44,49,50,53,65,66,67,68,69,70,76,89,90,91,92,100,101,102,109,110,111,112,113,114,116,131,132,133,134,135,136,],[19,-14,-12,-14,-13,-29,-18,-20,-61,-42,-15,-23,-26,-30,-31,-32,-19,-29,-29,-34,-34,-21,-40,-41,-24,-25,-27,-28,-33,-16,-17,-43,-44,-45,-46,-47,-48,]),'RUKKHER':([12,20,21,34,40,41,44,49,50,53,65,66,67,68,69,70,76,89,90,91,92,100,101,102,109,110,111,112,113,114,116,131,132,133,134,135,136,],[-14,-12,-14,60,-13,-29,-18,-20,-61,-42,-15,-23,-26,-30,-31,-32,-19,-29,-29,-34,-34,-21,-40,-41,-24,-25,-27,-28,-33,-16,-17,-43,-44,-45,-46,-47,-48,]),'EIN':([12,21,29,32,41,44,49,50,52,53,56,65,66,67,68,69,70,76,89,90,91,92,100,101,102,109,110,111,112,113,114,116,131,132,133,134,135,136,],[23,23,23,23,-29,-18,-20,-61,-53,-42,23,-15,-23,-26,-30,-31,-32,-19,-29,-29,-34,-34,-21,-40,-41,-24,-25,-27,-28,-33,-16,-17,-43,-44,-45,-46,-47,-48,]),'AUS':([12,21,29,32,41,44,49,50,52,53,56,65,66,67,68,69,70,76,89,90,91,92,100,101,102,109,110,111,112,113,114,116,131,132,133,134,135,136,],[24,24,24,24,-29,-18,-20,-61,-53,-42,24,-15,-23,-26,-30,-31,-32,-19,-29,-29,-34,-34,-21,-40,-41,-24,-25,-27,-28,-33,-16,-17,-43,-44,-45,-46,-47,-48,]),'GSUB':([12,21,29,32,41,44,49,50,52,53,56,65,66,67,68,69,70,76,89,90,91,92,100,101,102,109,110,111,112,113,114,116,131,132,133,134,135,136,],[25,25,25,25,-29,-18,-20,-61,-53,-42,25,-15,-23,-26,-30,-31,-32,-19,-29,-29,-34,-34,-21,-40,-41,-24,-25,-27,-28,-33,-16,-17,-43,-44,-45,-46,-47,-48,]),'TUN':([12,21,29,32,41,44,49,50,52,53,56,65,66,67,68,69,70,76,89,90,91,92,100,101,102,109,110,111,112,113,114,116,131,132,133,134,135,136,],[29,29,29,29,-29,-18,-20,-61,-53,-42,29,-15,-23,-26,-30,-31,-32,-19,-29,-29,-34,-34,-21,-40,-41,-24,-25,-27,-28,-33,-16,-17,-43,-44,-45,-46,-47,-48,]),'WENN':([12,21,29,32,41,44,49,50,52,53,56,65,66,67,68,69,70,76,89,90,91,92,100,101,102,109,110,111,112,113,114,116,131,132,133,134,135,136,],[33,33,33,33,-29,-18,-20,-61,-53,-42,33,-15,-23,-26,-30,-31,-32,-19,-29,-29,-34,-34,-21,-40,-41,-24,-25,-27,-28,-33,-16,-17,-43,-44,-45,-46,-47,-48,]),'WAHREND':([12,21,29,32,40,41,44,49,50,51,52,53,56,65,66,67,68,69,70,76,89,90,91,92,100,101,102,109,110,111,112,113,114,116,131,132,133,134,135,136,],[30,30,30,30,-13,-29,-18,-20,-61,78,-53,-42,30,-15,-23,-26,-30,-31,-32,-19,-29,-29,-34,-34,-21,-40,-41,-24,-25,-27,-28,-33,-16,-17,-43,-44,-45,-46,-47,-48,]),'WORD':([18,],[37,]),'FLOAT':([18,],[38,]),'STRING':([18,],[39,]),'ENDE':([21,27,28,32,40,41,44,47,49,50,52,53,55,56,57,58,65,66,67,68,69,70,76,77,85,86,87,89,90,91,92,100,101,102,109,110,111,112,113,114,116,131,132,133,134,135,136,],[-14,-60,50,-14,-13,-29,-18,50,-20,-61,-53,-42,-55,-14,-55,-54,-15,-23,-26,-30,-31,-32,-19,-59,-56,-58,-52,-29,-29,-34,-34,-21,-40,-41,-24,-25,-27,-28,-33,-16,-17,-43,-44,-45,-46,-47,-48,]),'SONNST':([21,27,40,41,44,49,50,53,55,56,65,66,67,68,69,70,76,85,86,89,90,91,92,100,101,102,109,110,111,112,113,114,116,131,132,133,134,135,136,],[-14,48,-13,-29,-18,-20,-61,-42,-55,-14,-15,-23,-26,-30,-31,-32,-19,-56,-58,-29,-29,-34,-34,-21,-40,-41,-24,-25,-27,-28,-33,-16,-17,-43,-44,-45,-46,-47,-48,]),'ASSIGN':([22,26,45,98,99,119,120,137,138,140,141,144,145,],[41,-36,-37,-73,-74,-71,-72,-78,-79,-76,-77,-81,-82,]),'LPAREN':([23,24,30,33,41,71,78,79,80,89,90,91,92,],[42,43,54,54,71,71,54,54,54,71,71,71,71,]),'RPAREN':([26,43,45,66,67,68,69,70,71,72,73,82,83,84,89,90,91,92,93,94,96,97,98,99,109,110,111,112,113,115,117,119,120,121,122,123,124,125,126,127,128,137,138,140,141,144,145,],[-36,-35,-37,-23,-26,-30,-31,-32,-29,-63,-65,-49,-50,-51,-29,-29,-34,-34,113,114,116,-35,-73,-74,-24,-25,-27,-28,-33,-63,-65,-71,-72,131,132,133,134,135,136,-62,-64,-78,-79,-76,-77,-81,-82,]),'LBRKT':([26,36,37,38,39,98,99,137,138,],[46,46,-66,-67,-68,118,118,139,139,]),'DANN':([31,48,53,59,101,102,131,132,133,134,135,136,],[56,56,-42,-57,-40,-41,-43,-44,-45,-46,-47,-48,]),'TIMES':([41,66,67,68,69,70,71,89,90,91,92,109,110,111,112,113,],[-29,91,-26,-30,-31,-32,-29,-29,-29,-34,-34,91,91,-27,-28,-33,]),'DIVIDE':([41,66,67,68,69,70,71,89,90,91,92,109,110,111,112,113,],[-29,92,-26,-30,-31,-32,-29,-29,-29,-34,-34,92,92,-27,-28,-33,]),'PLUS':([41,65,66,67,68,69,70,71,89,90,91,92,93,109,110,111,112,113,],[-29,89,-23,-26,-30,-31,-32,-29,-29,-29,-34,-34,89,-24,-25,-27,-28,-33,]),'MINUS':([41,65,66,67,68,69,70,71,89,90,91,92,93,109,110,111,112,113,],[-29,90,-23,-26,-30,-31,-32,-29,-29,-29,-34,-34,90,-24,-25,-27,-28,-33,]),'VALUE':([41,46,54,71,89,90,91,92,103,104,105,106,107,108,118,139,],[69,74,82,69,69,69,69,69,82,82,82,82,82,82,129,142,]),'FLT':([41,54,71,89,90,91,92,103,104,105,106,107,108,],[70,84,70,70,70,70,70,84,84,84,84,84,84,]),'AND':([52,53,59,100,101,102,131,132,133,134,135,136,],[79,-42,79,79,-40,-41,-43,-44,-45,-46,-47,-48,]),'OR':([52,53,59,100,101,102,131,132,133,134,135,136,],[80,-42,80,80,-40,-41,-43,-44,-45,-46,-47,-48,]),'RBRKT':([74,75,129,130,142,143,],[98,99,137,138,144,145,]),'GT':([81,82,83,84,],[103,-49,-50,-51,]),'GE':([81,82,83,84,],[104,-49,-50,-51,]),'EQ':([81,82,83,84,],[105,-49,-50,-51,]),'NE':([81,82,83,84,],[106,-49,-50,-51,]),'LE':([81,82,83,84,],[107,-49,-50,-51,]),'LT':([81,82,83,84,],[108,-49,-50,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'V':([2,4,],[3,9,]),'V0':([2,4,],[4,4,]),'R':([3,60,],[6,88,]),'R0':([3,60,],[7,7,]),'B':([6,13,],[11,34,]),'V1':([10,35,],[15,61,]),'V2':([10,35,],[16,62,]),'S':([12,21,29,32,56,],[20,40,51,58,86,]),'S0':([12,21,29,32,56,],[21,21,21,21,21,]),'IDORAMC':([12,21,29,32,42,56,95,],[22,22,22,22,72,22,115,]),'WE':([12,21,29,32,56,],[27,27,27,27,27,]),'WAH':([12,21,29,32,56,],[28,28,28,28,28,]),'WE0':([12,21,29,32,56,],[31,31,31,31,31,]),'WAH0':([12,21,29,32,56,],[32,32,32,32,32,]),'TYPE':([18,],[36,]),'AMC1':([26,36,],[45,64,]),'SD':([27,],[47,]),'END':([28,47,],[49,76,]),'CONDITION':([30,33,78,],[52,59,100,]),'CONDITION1':([30,33,78,79,80,],[53,53,53,101,102,]),'WE1':([31,48,],[55,77,]),'WAH1':([32,],[57,]),'AMC0':([36,],[63,]),'E':([41,71,],[65,93,]),'T':([41,71,89,90,],[66,66,109,110,]),'F':([41,71,89,90,91,92,],[67,67,67,67,111,112,]),'EXP':([43,97,],[73,117,]),'CMP':([54,103,104,105,106,107,108,],[81,121,122,123,124,125,126,]),'GZ':([55,57,],[85,87,]),'INPUT':([72,115,],[94,127,]),'OUTPUT':([73,117,],[96,128,]),'AMC2':([98,99,],[119,120,]),'AMC3':([137,138,],[140,141,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAMM V R B SCHLUSS','program',5,'p_program','elementar.py',192),
  ('V -> V0 V','V',2,'p_V','elementar.py',198),
  ('V -> <empty>','V',0,'p_V','elementar.py',199),
  ('V0 -> DIM ID V1','V0',3,'p_V0','elementar.py',204),
  ('V0 -> DIM ID V2','V0',3,'p_V0','elementar.py',205),
  ('V1 -> COMMA ID V1','V1',3,'p_V1','elementar.py',211),
  ('V1 -> COMMA ID V2','V1',3,'p_V1','elementar.py',212),
  ('V2 -> ALS TYPE AMC0','V2',3,'p_V2','elementar.py',218),
  ('R -> R0 COLON B RUKKHER R','R',5,'p_R','elementar.py',223),
  ('R -> <empty>','R',0,'p_R','elementar.py',224),
  ('R0 -> SUB ID','R0',2,'p_R0','elementar.py',229),
  ('B -> BEGIN S','B',2,'p_B','elementar.py',235),
  ('S -> S0 S','S',2,'p_S','elementar.py',240),
  ('S -> <empty>','S',0,'p_S','elementar.py',241),
  ('S0 -> IDORAMC ASSIGN E','S0',3,'p_S0','elementar.py',246),
  ('S0 -> EIN LPAREN IDORAMC INPUT RPAREN','S0',5,'p_S0','elementar.py',247),
  ('S0 -> AUS LPAREN EXP OUTPUT RPAREN','S0',5,'p_S0','elementar.py',248),
  ('S0 -> GSUB ID','S0',2,'p_S0','elementar.py',249),
  ('S0 -> WE SD END','S0',3,'p_S0','elementar.py',250),
  ('S0 -> WAH END','S0',2,'p_S0','elementar.py',251),
  ('S0 -> TUN S WAHREND CONDITION','S0',4,'p_S0','elementar.py',252),
  ('S0 -> <empty>','S0',0,'p_S0','elementar.py',253),
  ('E -> T','E',1,'p_E','elementar.py',277),
  ('E -> E PLUS T','E',3,'p_E','elementar.py',278),
  ('E -> E MINUS T','E',3,'p_E','elementar.py',279),
  ('T -> F','T',1,'p_T','elementar.py',305),
  ('T -> T TIMES F','T',3,'p_T','elementar.py',306),
  ('T -> T DIVIDE F','T',3,'p_T','elementar.py',307),
  ('T -> <empty>','T',0,'p_T','elementar.py',308),
  ('F -> ID','F',1,'p_F','elementar.py',319),
  ('F -> VALUE','F',1,'p_F','elementar.py',320),
  ('F -> FLT','F',1,'p_F','elementar.py',321),
  ('F -> LPAREN E RPAREN','F',3,'p_F','elementar.py',322),
  ('F -> <empty>','F',0,'p_F','elementar.py',323),
  ('EXP -> <empty>','EXP',0,'p_EXP','elementar.py',332),
  ('IDORAMC -> ID','IDORAMC',1,'p_IDORAMC','elementar.py',346),
  ('IDORAMC -> ID AMC1','IDORAMC',2,'p_IDORAMC','elementar.py',347),
  ('EIDORAMC -> ID','EIDORAMC',1,'p_EIDORAMC','elementar.py',354),
  ('EIDORAMC -> ID AMC1','EIDORAMC',2,'p_EIDORAMC','elementar.py',355),
  ('CONDITION -> CONDITION AND CONDITION1','CONDITION',3,'p_CONDITION','elementar.py',360),
  ('CONDITION -> CONDITION OR CONDITION1','CONDITION',3,'p_CONDITION','elementar.py',361),
  ('CONDITION -> CONDITION1','CONDITION',1,'p_CONDITION','elementar.py',362),
  ('CONDITION1 -> LPAREN CMP GT CMP RPAREN','CONDITION1',5,'p_CONDITION1','elementar.py',371),
  ('CONDITION1 -> LPAREN CMP GE CMP RPAREN','CONDITION1',5,'p_CONDITION1','elementar.py',372),
  ('CONDITION1 -> LPAREN CMP EQ CMP RPAREN','CONDITION1',5,'p_CONDITION1','elementar.py',373),
  ('CONDITION1 -> LPAREN CMP NE CMP RPAREN','CONDITION1',5,'p_CONDITION1','elementar.py',374),
  ('CONDITION1 -> LPAREN CMP LE CMP RPAREN','CONDITION1',5,'p_CONDITION1','elementar.py',375),
  ('CONDITION1 -> LPAREN CMP LT CMP RPAREN','CONDITION1',5,'p_CONDITION1','elementar.py',376),
  ('CMP -> VALUE','CMP',1,'p_CMP','elementar.py',398),
  ('CMP -> ID','CMP',1,'p_CMP','elementar.py',399),
  ('CMP -> FLT','CMP',1,'p_CMP','elementar.py',400),
  ('WAH -> WAH0 WAH1 GZ','WAH',3,'p_WAH','elementar.py',409),
  ('WAH0 -> WAHREND CONDITION','WAH0',2,'p_WAH0','elementar.py',414),
  ('WAH1 -> S','WAH1',1,'p_WAH1','elementar.py',424),
  ('GZ -> <empty>','GZ',0,'p_GZ','elementar.py',429),
  ('WE -> WE0 WE1 GZ','WE',3,'p_WE','elementar.py',439),
  ('WE0 -> WENN CONDITION','WE0',2,'p_WE0','elementar.py',444),
  ('WE1 -> DANN S','WE1',2,'p_WE1','elementar.py',454),
  ('SD -> SONNST WE1','SD',2,'p_SD','elementar.py',465),
  ('SD -> <empty>','SD',0,'p_SD','elementar.py',466),
  ('END -> ENDE','END',1,'p_END','elementar.py',472),
  ('INPUT -> COMMA IDORAMC INPUT','INPUT',3,'p_INPUT','elementar.py',483),
  ('INPUT -> <empty>','INPUT',0,'p_INPUT','elementar.py',484),
  ('OUTPUT -> COMMA EXP OUTPUT','OUTPUT',3,'p_OUTPUT','elementar.py',489),
  ('OUTPUT -> <empty>','OUTPUT',0,'p_OUTPUT','elementar.py',490),
  ('TYPE -> WORD','TYPE',1,'p_TYPE','elementar.py',495),
  ('TYPE -> FLOAT','TYPE',1,'p_TYPE','elementar.py',496),
  ('TYPE -> STRING','TYPE',1,'p_TYPE','elementar.py',497),
  ('AMC0 -> AMC1','AMC0',1,'p_AMC0','elementar.py',506),
  ('AMC0 -> <empty>','AMC0',0,'p_AMC0','elementar.py',507),
  ('AMC1 -> LBRKT VALUE RBRKT AMC2','AMC1',4,'p_AMC1','elementar.py',513),
  ('AMC1 -> LBRKT ID RBRKT AMC2','AMC1',4,'p_AMC1','elementar.py',514),
  ('AMC1 -> LBRKT VALUE RBRKT','AMC1',3,'p_AMC1','elementar.py',515),
  ('AMC1 -> LBRKT ID RBRKT','AMC1',3,'p_AMC1','elementar.py',516),
  ('AMC1 -> <empty>','AMC1',0,'p_AMC1','elementar.py',517),
  ('AMC2 -> LBRKT VALUE RBRKT AMC3','AMC2',4,'p_AMC2','elementar.py',525),
  ('AMC2 -> LBRKT ID RBRKT AMC3','AMC2',4,'p_AMC2','elementar.py',526),
  ('AMC2 -> LBRKT VALUE RBRKT','AMC2',3,'p_AMC2','elementar.py',527),
  ('AMC2 -> LBRKT ID RBRKT','AMC2',3,'p_AMC2','elementar.py',528),
  ('AMC2 -> <empty>','AMC2',0,'p_AMC2','elementar.py',529),
  ('AMC3 -> LBRKT VALUE RBRKT','AMC3',3,'p_AMC3','elementar.py',537),
  ('AMC3 -> LBRKT ID RBRKT','AMC3',3,'p_AMC3','elementar.py',538),
  ('AMC3 -> <empty>','AMC3',0,'p_AMC3','elementar.py',539),
]
